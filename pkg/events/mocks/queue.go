// Code generated by mockery v1.0.0
package mocks

import events "github.com/vmware/dispatch/pkg/events"
import mock "github.com/stretchr/testify/mock"

// Queue is an autogenerated mock type for the Queue type
type Queue struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Queue) Close() {
	_m.Called()
}

// Publish provides a mock function with given fields: event
func (_m *Queue) Publish(event *events.Event) error {
	ret := _m.Called(event)

	var r0 error
	if rf, ok := ret.Get(0).(func(*events.Event) error); ok {
		r0 = rf(event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: topic, handler
func (_m *Queue) Subscribe(topic string, handler events.Handler) (events.Subscription, error) {
	ret := _m.Called(topic, handler)

	var r0 events.Subscription
	if rf, ok := ret.Get(0).(func(string, events.Handler) events.Subscription); ok {
		r0 = rf(topic, handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(events.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, events.Handler) error); ok {
		r1 = rf(topic, handler)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
