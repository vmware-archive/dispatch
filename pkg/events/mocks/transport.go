// Code generated by mockery v1.0.0
package mocks

import context "context"
import events "github.com/vmware/dispatch/pkg/events"
import mock "github.com/stretchr/testify/mock"

// Transport is an autogenerated mock type for the Transport type
type Transport struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *Transport) Close() {
	_m.Called()
}

// Publish provides a mock function with given fields: ctx, event, topic, exchange
func (_m *Transport) Publish(ctx context.Context, event *events.CloudEvent, topic string, exchange string) error {
	ret := _m.Called(ctx, event, topic, exchange)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *events.CloudEvent, string, string) error); ok {
		r0 = rf(ctx, event, topic, exchange)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Subscribe provides a mock function with given fields: ctx, topic, handler
func (_m *Transport) Subscribe(ctx context.Context, topic string, handler events.Handler) (events.Subscription, error) {
	ret := _m.Called(ctx, topic, handler)

	var r0 events.Subscription
	if rf, ok := ret.Get(0).(func(context.Context, string, events.Handler) events.Subscription); ok {
		r0 = rf(ctx, topic, handler)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(events.Subscription)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, events.Handler) error); ok {
		r1 = rf(ctx, topic, handler)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
