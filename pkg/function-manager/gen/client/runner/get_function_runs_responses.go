///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/function-manager/gen/models"
)

// GetFunctionRunsReader is a Reader for the GetFunctionRuns structure.
type GetFunctionRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFunctionRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFunctionRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFunctionRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFunctionRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetFunctionRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetFunctionRunsOK creates a GetFunctionRunsOK with default headers values
func NewGetFunctionRunsOK() *GetFunctionRunsOK {
	return &GetFunctionRunsOK{}
}

/*GetFunctionRunsOK handles this case with default header values.

List of function runs
*/
type GetFunctionRunsOK struct {
	Payload models.GetFunctionRunsOKBody
}

func (o *GetFunctionRunsOK) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs][%d] getFunctionRunsOK  %+v", 200, o.Payload)
}

func (o *GetFunctionRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionRunsBadRequest creates a GetFunctionRunsBadRequest with default headers values
func NewGetFunctionRunsBadRequest() *GetFunctionRunsBadRequest {
	return &GetFunctionRunsBadRequest{}
}

/*GetFunctionRunsBadRequest handles this case with default header values.

Bad Request
*/
type GetFunctionRunsBadRequest struct {
	Payload *models.Error
}

func (o *GetFunctionRunsBadRequest) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs][%d] getFunctionRunsBadRequest  %+v", 400, o.Payload)
}

func (o *GetFunctionRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionRunsNotFound creates a GetFunctionRunsNotFound with default headers values
func NewGetFunctionRunsNotFound() *GetFunctionRunsNotFound {
	return &GetFunctionRunsNotFound{}
}

/*GetFunctionRunsNotFound handles this case with default header values.

Function not found
*/
type GetFunctionRunsNotFound struct {
	Payload *models.Error
}

func (o *GetFunctionRunsNotFound) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs][%d] getFunctionRunsNotFound  %+v", 404, o.Payload)
}

func (o *GetFunctionRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionRunsInternalServerError creates a GetFunctionRunsInternalServerError with default headers values
func NewGetFunctionRunsInternalServerError() *GetFunctionRunsInternalServerError {
	return &GetFunctionRunsInternalServerError{}
}

/*GetFunctionRunsInternalServerError handles this case with default header values.

Internal error
*/
type GetFunctionRunsInternalServerError struct {
	Payload *models.Error
}

func (o *GetFunctionRunsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /{functionName}/runs][%d] getFunctionRunsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetFunctionRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
