///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetFunctionReader is a Reader for the GetFunction structure.
type GetFunctionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFunctionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFunctionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetFunctionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetFunctionUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetFunctionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetFunctionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetFunctionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetFunctionOK creates a GetFunctionOK with default headers values
func NewGetFunctionOK() *GetFunctionOK {
	return &GetFunctionOK{}
}

/*GetFunctionOK handles this case with default header values.

Successful operation
*/
type GetFunctionOK struct {
	Payload *v1.Function
}

func (o *GetFunctionOK) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunctionOK  %+v", 200, o.Payload)
}

func (o *GetFunctionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Function)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionBadRequest creates a GetFunctionBadRequest with default headers values
func NewGetFunctionBadRequest() *GetFunctionBadRequest {
	return &GetFunctionBadRequest{}
}

/*GetFunctionBadRequest handles this case with default header values.

Invalid Name supplied
*/
type GetFunctionBadRequest struct {
	Payload *v1.Error
}

func (o *GetFunctionBadRequest) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunctionBadRequest  %+v", 400, o.Payload)
}

func (o *GetFunctionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionUnauthorized creates a GetFunctionUnauthorized with default headers values
func NewGetFunctionUnauthorized() *GetFunctionUnauthorized {
	return &GetFunctionUnauthorized{}
}

/*GetFunctionUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetFunctionUnauthorized struct {
	Payload *v1.Error
}

func (o *GetFunctionUnauthorized) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunctionUnauthorized  %+v", 401, o.Payload)
}

func (o *GetFunctionUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionForbidden creates a GetFunctionForbidden with default headers values
func NewGetFunctionForbidden() *GetFunctionForbidden {
	return &GetFunctionForbidden{}
}

/*GetFunctionForbidden handles this case with default header values.

access to this resource is forbidden
*/
type GetFunctionForbidden struct {
	Payload *v1.Error
}

func (o *GetFunctionForbidden) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunctionForbidden  %+v", 403, o.Payload)
}

func (o *GetFunctionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionNotFound creates a GetFunctionNotFound with default headers values
func NewGetFunctionNotFound() *GetFunctionNotFound {
	return &GetFunctionNotFound{}
}

/*GetFunctionNotFound handles this case with default header values.

Function not found
*/
type GetFunctionNotFound struct {
	Payload *v1.Error
}

func (o *GetFunctionNotFound) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunctionNotFound  %+v", 404, o.Payload)
}

func (o *GetFunctionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFunctionDefault creates a GetFunctionDefault with default headers values
func NewGetFunctionDefault(code int) *GetFunctionDefault {
	return &GetFunctionDefault{
		_statusCode: code,
	}
}

/*GetFunctionDefault handles this case with default header values.

Unknown error
*/
type GetFunctionDefault struct {
	_statusCode int

	Payload *v1.Error
}

// Code gets the status code for the get function default response
func (o *GetFunctionDefault) Code() int {
	return o._statusCode
}

func (o *GetFunctionDefault) Error() string {
	return fmt.Sprintf("[GET /function/{functionName}][%d] getFunction default  %+v", o._statusCode, o.Payload)
}

func (o *GetFunctionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
