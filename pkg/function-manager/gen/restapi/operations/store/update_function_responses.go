///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/function-manager/gen/models"
)

// UpdateFunctionOKCode is the HTTP code returned for type UpdateFunctionOK
const UpdateFunctionOKCode int = 200

/*UpdateFunctionOK Successful update

swagger:response updateFunctionOK
*/
type UpdateFunctionOK struct {

	/*
	  In: Body
	*/
	Payload *models.Function `json:"body,omitempty"`
}

// NewUpdateFunctionOK creates UpdateFunctionOK with default headers values
func NewUpdateFunctionOK() *UpdateFunctionOK {
	return &UpdateFunctionOK{}
}

// WithPayload adds the payload to the update function o k response
func (o *UpdateFunctionOK) WithPayload(payload *models.Function) *UpdateFunctionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update function o k response
func (o *UpdateFunctionOK) SetPayload(payload *models.Function) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFunctionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateFunctionBadRequestCode is the HTTP code returned for type UpdateFunctionBadRequest
const UpdateFunctionBadRequestCode int = 400

/*UpdateFunctionBadRequest Invalid input

swagger:response updateFunctionBadRequest
*/
type UpdateFunctionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateFunctionBadRequest creates UpdateFunctionBadRequest with default headers values
func NewUpdateFunctionBadRequest() *UpdateFunctionBadRequest {
	return &UpdateFunctionBadRequest{}
}

// WithPayload adds the payload to the update function bad request response
func (o *UpdateFunctionBadRequest) WithPayload(payload *models.Error) *UpdateFunctionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update function bad request response
func (o *UpdateFunctionBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFunctionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateFunctionNotFoundCode is the HTTP code returned for type UpdateFunctionNotFound
const UpdateFunctionNotFoundCode int = 404

/*UpdateFunctionNotFound Function not found

swagger:response updateFunctionNotFound
*/
type UpdateFunctionNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateFunctionNotFound creates UpdateFunctionNotFound with default headers values
func NewUpdateFunctionNotFound() *UpdateFunctionNotFound {
	return &UpdateFunctionNotFound{}
}

// WithPayload adds the payload to the update function not found response
func (o *UpdateFunctionNotFound) WithPayload(payload *models.Error) *UpdateFunctionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update function not found response
func (o *UpdateFunctionNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFunctionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateFunctionInternalServerErrorCode is the HTTP code returned for type UpdateFunctionInternalServerError
const UpdateFunctionInternalServerErrorCode int = 500

/*UpdateFunctionInternalServerError Internal error

swagger:response updateFunctionInternalServerError
*/
type UpdateFunctionInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateFunctionInternalServerError creates UpdateFunctionInternalServerError with default headers values
func NewUpdateFunctionInternalServerError() *UpdateFunctionInternalServerError {
	return &UpdateFunctionInternalServerError{}
}

// WithPayload adds the payload to the update function internal server error response
func (o *UpdateFunctionInternalServerError) WithPayload(payload *models.Error) *UpdateFunctionInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update function internal server error response
func (o *UpdateFunctionInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateFunctionInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
