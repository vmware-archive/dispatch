// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// AddFunctionCreatedCode is the HTTP code returned for type AddFunctionCreated
const AddFunctionCreatedCode int = 201

/*AddFunctionCreated Function created

swagger:response addFunctionCreated
*/
type AddFunctionCreated struct {

	/*
	  In: Body
	*/
	Payload *v1.Function `json:"body,omitempty"`
}

// NewAddFunctionCreated creates AddFunctionCreated with default headers values
func NewAddFunctionCreated() *AddFunctionCreated {

	return &AddFunctionCreated{}
}

// WithPayload adds the payload to the add function created response
func (o *AddFunctionCreated) WithPayload(payload *v1.Function) *AddFunctionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function created response
func (o *AddFunctionCreated) SetPayload(payload *v1.Function) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddFunctionBadRequestCode is the HTTP code returned for type AddFunctionBadRequest
const AddFunctionBadRequestCode int = 400

/*AddFunctionBadRequest Invalid input

swagger:response addFunctionBadRequest
*/
type AddFunctionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddFunctionBadRequest creates AddFunctionBadRequest with default headers values
func NewAddFunctionBadRequest() *AddFunctionBadRequest {

	return &AddFunctionBadRequest{}
}

// WithPayload adds the payload to the add function bad request response
func (o *AddFunctionBadRequest) WithPayload(payload *v1.Error) *AddFunctionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function bad request response
func (o *AddFunctionBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddFunctionUnauthorizedCode is the HTTP code returned for type AddFunctionUnauthorized
const AddFunctionUnauthorizedCode int = 401

/*AddFunctionUnauthorized Unauthorized Request

swagger:response addFunctionUnauthorized
*/
type AddFunctionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddFunctionUnauthorized creates AddFunctionUnauthorized with default headers values
func NewAddFunctionUnauthorized() *AddFunctionUnauthorized {

	return &AddFunctionUnauthorized{}
}

// WithPayload adds the payload to the add function unauthorized response
func (o *AddFunctionUnauthorized) WithPayload(payload *v1.Error) *AddFunctionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function unauthorized response
func (o *AddFunctionUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddFunctionForbiddenCode is the HTTP code returned for type AddFunctionForbidden
const AddFunctionForbiddenCode int = 403

/*AddFunctionForbidden access to this resource is forbidden

swagger:response addFunctionForbidden
*/
type AddFunctionForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddFunctionForbidden creates AddFunctionForbidden with default headers values
func NewAddFunctionForbidden() *AddFunctionForbidden {

	return &AddFunctionForbidden{}
}

// WithPayload adds the payload to the add function forbidden response
func (o *AddFunctionForbidden) WithPayload(payload *v1.Error) *AddFunctionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function forbidden response
func (o *AddFunctionForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddFunctionConflictCode is the HTTP code returned for type AddFunctionConflict
const AddFunctionConflictCode int = 409

/*AddFunctionConflict Already Exists

swagger:response addFunctionConflict
*/
type AddFunctionConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddFunctionConflict creates AddFunctionConflict with default headers values
func NewAddFunctionConflict() *AddFunctionConflict {

	return &AddFunctionConflict{}
}

// WithPayload adds the payload to the add function conflict response
func (o *AddFunctionConflict) WithPayload(payload *v1.Error) *AddFunctionConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function conflict response
func (o *AddFunctionConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddFunctionDefault Unknown error

swagger:response addFunctionDefault
*/
type AddFunctionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddFunctionDefault creates AddFunctionDefault with default headers values
func NewAddFunctionDefault(code int) *AddFunctionDefault {
	if code <= 0 {
		code = 500
	}

	return &AddFunctionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add function default response
func (o *AddFunctionDefault) WithStatusCode(code int) *AddFunctionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add function default response
func (o *AddFunctionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add function default response
func (o *AddFunctionDefault) WithPayload(payload *v1.Error) *AddFunctionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add function default response
func (o *AddFunctionDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddFunctionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
