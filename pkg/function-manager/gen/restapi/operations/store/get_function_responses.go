///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package store

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetFunctionOKCode is the HTTP code returned for type GetFunctionOK
const GetFunctionOKCode int = 200

/*GetFunctionOK Successful operation

swagger:response getFunctionOK
*/
type GetFunctionOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Function `json:"body,omitempty"`
}

// NewGetFunctionOK creates GetFunctionOK with default headers values
func NewGetFunctionOK() *GetFunctionOK {

	return &GetFunctionOK{}
}

// WithPayload adds the payload to the get function o k response
func (o *GetFunctionOK) WithPayload(payload *v1.Function) *GetFunctionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function o k response
func (o *GetFunctionOK) SetPayload(payload *v1.Function) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFunctionBadRequestCode is the HTTP code returned for type GetFunctionBadRequest
const GetFunctionBadRequestCode int = 400

/*GetFunctionBadRequest Invalid Name supplied

swagger:response getFunctionBadRequest
*/
type GetFunctionBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetFunctionBadRequest creates GetFunctionBadRequest with default headers values
func NewGetFunctionBadRequest() *GetFunctionBadRequest {

	return &GetFunctionBadRequest{}
}

// WithPayload adds the payload to the get function bad request response
func (o *GetFunctionBadRequest) WithPayload(payload *v1.Error) *GetFunctionBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function bad request response
func (o *GetFunctionBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFunctionUnauthorizedCode is the HTTP code returned for type GetFunctionUnauthorized
const GetFunctionUnauthorizedCode int = 401

/*GetFunctionUnauthorized Unauthorized Request

swagger:response getFunctionUnauthorized
*/
type GetFunctionUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetFunctionUnauthorized creates GetFunctionUnauthorized with default headers values
func NewGetFunctionUnauthorized() *GetFunctionUnauthorized {

	return &GetFunctionUnauthorized{}
}

// WithPayload adds the payload to the get function unauthorized response
func (o *GetFunctionUnauthorized) WithPayload(payload *v1.Error) *GetFunctionUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function unauthorized response
func (o *GetFunctionUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFunctionForbiddenCode is the HTTP code returned for type GetFunctionForbidden
const GetFunctionForbiddenCode int = 403

/*GetFunctionForbidden access to this resource is forbidden

swagger:response getFunctionForbidden
*/
type GetFunctionForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetFunctionForbidden creates GetFunctionForbidden with default headers values
func NewGetFunctionForbidden() *GetFunctionForbidden {

	return &GetFunctionForbidden{}
}

// WithPayload adds the payload to the get function forbidden response
func (o *GetFunctionForbidden) WithPayload(payload *v1.Error) *GetFunctionForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function forbidden response
func (o *GetFunctionForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetFunctionNotFoundCode is the HTTP code returned for type GetFunctionNotFound
const GetFunctionNotFoundCode int = 404

/*GetFunctionNotFound Function not found

swagger:response getFunctionNotFound
*/
type GetFunctionNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetFunctionNotFound creates GetFunctionNotFound with default headers values
func NewGetFunctionNotFound() *GetFunctionNotFound {

	return &GetFunctionNotFound{}
}

// WithPayload adds the payload to the get function not found response
func (o *GetFunctionNotFound) WithPayload(payload *v1.Error) *GetFunctionNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function not found response
func (o *GetFunctionNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetFunctionDefault Unknown error

swagger:response getFunctionDefault
*/
type GetFunctionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetFunctionDefault creates GetFunctionDefault with default headers values
func NewGetFunctionDefault(code int) *GetFunctionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFunctionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get function default response
func (o *GetFunctionDefault) WithStatusCode(code int) *GetFunctionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get function default response
func (o *GetFunctionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get function default response
func (o *GetFunctionDefault) WithPayload(payload *v1.Error) *GetFunctionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get function default response
func (o *GetFunctionDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFunctionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
