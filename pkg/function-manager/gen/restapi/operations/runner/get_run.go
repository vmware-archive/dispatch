///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetRunHandlerFunc turns a function with the right signature into a get run handler
type GetRunHandlerFunc func(GetRunParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetRunHandlerFunc) Handle(params GetRunParams) middleware.Responder {
	return fn(params)
}

// GetRunHandler interface for that can handle valid get run params
type GetRunHandler interface {
	Handle(GetRunParams) middleware.Responder
}

// NewGetRun creates a new http.Handler for the get run operation
func NewGetRun(ctx *middleware.Context, handler GetRunHandler) *GetRun {
	return &GetRun{Context: ctx, Handler: handler}
}

/*GetRun swagger:route GET /runs/{runName} Runner getRun

Get function run by its name

*/
type GetRun struct {
	Context *middleware.Context
	Handler GetRunHandler
}

func (o *GetRun) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetRunParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
