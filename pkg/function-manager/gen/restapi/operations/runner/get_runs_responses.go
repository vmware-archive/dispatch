///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/function-manager/gen/models"
)

// GetRunsOKCode is the HTTP code returned for type GetRunsOK
const GetRunsOKCode int = 200

/*GetRunsOK List of function runs

swagger:response getRunsOK
*/
type GetRunsOK struct {

	/*
	  In: Body
	*/
	Payload models.GetRunsOKBody `json:"body,omitempty"`
}

// NewGetRunsOK creates GetRunsOK with default headers values
func NewGetRunsOK() *GetRunsOK {
	return &GetRunsOK{}
}

// WithPayload adds the payload to the get runs o k response
func (o *GetRunsOK) WithPayload(payload models.GetRunsOKBody) *GetRunsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runs o k response
func (o *GetRunsOK) SetPayload(payload models.GetRunsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRunsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetRunsOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetRunsBadRequestCode is the HTTP code returned for type GetRunsBadRequest
const GetRunsBadRequestCode int = 400

/*GetRunsBadRequest Invalid input

swagger:response getRunsBadRequest
*/
type GetRunsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRunsBadRequest creates GetRunsBadRequest with default headers values
func NewGetRunsBadRequest() *GetRunsBadRequest {
	return &GetRunsBadRequest{}
}

// WithPayload adds the payload to the get runs bad request response
func (o *GetRunsBadRequest) WithPayload(payload *models.Error) *GetRunsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runs bad request response
func (o *GetRunsBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRunsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRunsNotFoundCode is the HTTP code returned for type GetRunsNotFound
const GetRunsNotFoundCode int = 404

/*GetRunsNotFound Function not found

swagger:response getRunsNotFound
*/
type GetRunsNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRunsNotFound creates GetRunsNotFound with default headers values
func NewGetRunsNotFound() *GetRunsNotFound {
	return &GetRunsNotFound{}
}

// WithPayload adds the payload to the get runs not found response
func (o *GetRunsNotFound) WithPayload(payload *models.Error) *GetRunsNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runs not found response
func (o *GetRunsNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRunsNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetRunsInternalServerErrorCode is the HTTP code returned for type GetRunsInternalServerError
const GetRunsInternalServerErrorCode int = 500

/*GetRunsInternalServerError Internal error

swagger:response getRunsInternalServerError
*/
type GetRunsInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetRunsInternalServerError creates GetRunsInternalServerError with default headers values
func NewGetRunsInternalServerError() *GetRunsInternalServerError {
	return &GetRunsInternalServerError{}
}

// WithPayload adds the payload to the get runs internal server error response
func (o *GetRunsInternalServerError) WithPayload(payload *models.Error) *GetRunsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get runs internal server error response
func (o *GetRunsInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetRunsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
