///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package runner

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RunFunctionHandlerFunc turns a function with the right signature into a run function handler
type RunFunctionHandlerFunc func(RunFunctionParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RunFunctionHandlerFunc) Handle(params RunFunctionParams) middleware.Responder {
	return fn(params)
}

// RunFunctionHandler interface for that can handle valid run function params
type RunFunctionHandler interface {
	Handle(RunFunctionParams) middleware.Responder
}

// NewRunFunction creates a new http.Handler for the run function operation
func NewRunFunction(ctx *middleware.Context, handler RunFunctionHandler) *RunFunction {
	return &RunFunction{Context: ctx, Handler: handler}
}

/*RunFunction swagger:route POST /runs Runner runFunction

Run a function

*/
type RunFunction struct {
	Context *middleware.Context
	Handler RunFunctionHandler
}

func (o *RunFunction) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRunFunctionParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
