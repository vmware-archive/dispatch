///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetEndpointOKCode is the HTTP code returned for type GetEndpointOK
const GetEndpointOKCode int = 200

/*GetEndpointOK Successful operation

swagger:response getEndpointOK
*/
type GetEndpointOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Endpoint `json:"body,omitempty"`
}

// NewGetEndpointOK creates GetEndpointOK with default headers values
func NewGetEndpointOK() *GetEndpointOK {

	return &GetEndpointOK{}
}

// WithPayload adds the payload to the get endpoint o k response
func (o *GetEndpointOK) WithPayload(payload *v1.Endpoint) *GetEndpointOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint o k response
func (o *GetEndpointOK) SetPayload(payload *v1.Endpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEndpointBadRequestCode is the HTTP code returned for type GetEndpointBadRequest
const GetEndpointBadRequestCode int = 400

/*GetEndpointBadRequest Invalid Name supplied

swagger:response getEndpointBadRequest
*/
type GetEndpointBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetEndpointBadRequest creates GetEndpointBadRequest with default headers values
func NewGetEndpointBadRequest() *GetEndpointBadRequest {

	return &GetEndpointBadRequest{}
}

// WithPayload adds the payload to the get endpoint bad request response
func (o *GetEndpointBadRequest) WithPayload(payload *v1.Error) *GetEndpointBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint bad request response
func (o *GetEndpointBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEndpointUnauthorizedCode is the HTTP code returned for type GetEndpointUnauthorized
const GetEndpointUnauthorizedCode int = 401

/*GetEndpointUnauthorized Unauthorized Request

swagger:response getEndpointUnauthorized
*/
type GetEndpointUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetEndpointUnauthorized creates GetEndpointUnauthorized with default headers values
func NewGetEndpointUnauthorized() *GetEndpointUnauthorized {

	return &GetEndpointUnauthorized{}
}

// WithPayload adds the payload to the get endpoint unauthorized response
func (o *GetEndpointUnauthorized) WithPayload(payload *v1.Error) *GetEndpointUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint unauthorized response
func (o *GetEndpointUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEndpointForbiddenCode is the HTTP code returned for type GetEndpointForbidden
const GetEndpointForbiddenCode int = 403

/*GetEndpointForbidden access to this resource is forbidden

swagger:response getEndpointForbidden
*/
type GetEndpointForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetEndpointForbidden creates GetEndpointForbidden with default headers values
func NewGetEndpointForbidden() *GetEndpointForbidden {

	return &GetEndpointForbidden{}
}

// WithPayload adds the payload to the get endpoint forbidden response
func (o *GetEndpointForbidden) WithPayload(payload *v1.Error) *GetEndpointForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint forbidden response
func (o *GetEndpointForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEndpointNotFoundCode is the HTTP code returned for type GetEndpointNotFound
const GetEndpointNotFoundCode int = 404

/*GetEndpointNotFound Endpoint not found

swagger:response getEndpointNotFound
*/
type GetEndpointNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetEndpointNotFound creates GetEndpointNotFound with default headers values
func NewGetEndpointNotFound() *GetEndpointNotFound {

	return &GetEndpointNotFound{}
}

// WithPayload adds the payload to the get endpoint not found response
func (o *GetEndpointNotFound) WithPayload(payload *v1.Error) *GetEndpointNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint not found response
func (o *GetEndpointNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetEndpointDefault Unknown error

swagger:response getEndpointDefault
*/
type GetEndpointDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetEndpointDefault creates GetEndpointDefault with default headers values
func NewGetEndpointDefault(code int) *GetEndpointDefault {
	if code <= 0 {
		code = 500
	}

	return &GetEndpointDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get endpoint default response
func (o *GetEndpointDefault) WithStatusCode(code int) *GetEndpointDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get endpoint default response
func (o *GetEndpointDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get endpoint default response
func (o *GetEndpointDefault) WithPayload(payload *v1.Error) *GetEndpointDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get endpoint default response
func (o *GetEndpointDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEndpointDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
