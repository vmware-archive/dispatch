///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// AddEndpointOKCode is the HTTP code returned for type AddEndpointOK
const AddEndpointOKCode int = 200

/*AddEndpointOK Endpoint created

swagger:response addEndpointOK
*/
type AddEndpointOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Endpoint `json:"body,omitempty"`
}

// NewAddEndpointOK creates AddEndpointOK with default headers values
func NewAddEndpointOK() *AddEndpointOK {

	return &AddEndpointOK{}
}

// WithPayload adds the payload to the add endpoint o k response
func (o *AddEndpointOK) WithPayload(payload *v1.Endpoint) *AddEndpointOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint o k response
func (o *AddEndpointOK) SetPayload(payload *v1.Endpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddEndpointBadRequestCode is the HTTP code returned for type AddEndpointBadRequest
const AddEndpointBadRequestCode int = 400

/*AddEndpointBadRequest Invalid Input

swagger:response addEndpointBadRequest
*/
type AddEndpointBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddEndpointBadRequest creates AddEndpointBadRequest with default headers values
func NewAddEndpointBadRequest() *AddEndpointBadRequest {

	return &AddEndpointBadRequest{}
}

// WithPayload adds the payload to the add endpoint bad request response
func (o *AddEndpointBadRequest) WithPayload(payload *v1.Error) *AddEndpointBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint bad request response
func (o *AddEndpointBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddEndpointUnauthorizedCode is the HTTP code returned for type AddEndpointUnauthorized
const AddEndpointUnauthorizedCode int = 401

/*AddEndpointUnauthorized Unauthorized Request

swagger:response addEndpointUnauthorized
*/
type AddEndpointUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddEndpointUnauthorized creates AddEndpointUnauthorized with default headers values
func NewAddEndpointUnauthorized() *AddEndpointUnauthorized {

	return &AddEndpointUnauthorized{}
}

// WithPayload adds the payload to the add endpoint unauthorized response
func (o *AddEndpointUnauthorized) WithPayload(payload *v1.Error) *AddEndpointUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint unauthorized response
func (o *AddEndpointUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddEndpointForbiddenCode is the HTTP code returned for type AddEndpointForbidden
const AddEndpointForbiddenCode int = 403

/*AddEndpointForbidden access to this resource is forbidden

swagger:response addEndpointForbidden
*/
type AddEndpointForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddEndpointForbidden creates AddEndpointForbidden with default headers values
func NewAddEndpointForbidden() *AddEndpointForbidden {

	return &AddEndpointForbidden{}
}

// WithPayload adds the payload to the add endpoint forbidden response
func (o *AddEndpointForbidden) WithPayload(payload *v1.Error) *AddEndpointForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint forbidden response
func (o *AddEndpointForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddEndpointConflictCode is the HTTP code returned for type AddEndpointConflict
const AddEndpointConflictCode int = 409

/*AddEndpointConflict Already Exists

swagger:response addEndpointConflict
*/
type AddEndpointConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddEndpointConflict creates AddEndpointConflict with default headers values
func NewAddEndpointConflict() *AddEndpointConflict {

	return &AddEndpointConflict{}
}

// WithPayload adds the payload to the add endpoint conflict response
func (o *AddEndpointConflict) WithPayload(payload *v1.Error) *AddEndpointConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint conflict response
func (o *AddEndpointConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddEndpointDefault Unknown error

swagger:response addEndpointDefault
*/
type AddEndpointDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddEndpointDefault creates AddEndpointDefault with default headers values
func NewAddEndpointDefault(code int) *AddEndpointDefault {
	if code <= 0 {
		code = 500
	}

	return &AddEndpointDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add endpoint default response
func (o *AddEndpointDefault) WithStatusCode(code int) *AddEndpointDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add endpoint default response
func (o *AddEndpointDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add endpoint default response
func (o *AddEndpointDefault) WithPayload(payload *v1.Error) *AddEndpointDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add endpoint default response
func (o *AddEndpointDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddEndpointDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
