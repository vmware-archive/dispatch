///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// UpdateEndpointOKCode is the HTTP code returned for type UpdateEndpointOK
const UpdateEndpointOKCode int = 200

/*UpdateEndpointOK Successful update

swagger:response updateEndpointOK
*/
type UpdateEndpointOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Endpoint `json:"body,omitempty"`
}

// NewUpdateEndpointOK creates UpdateEndpointOK with default headers values
func NewUpdateEndpointOK() *UpdateEndpointOK {

	return &UpdateEndpointOK{}
}

// WithPayload adds the payload to the update endpoint o k response
func (o *UpdateEndpointOK) WithPayload(payload *v1.Endpoint) *UpdateEndpointOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint o k response
func (o *UpdateEndpointOK) SetPayload(payload *v1.Endpoint) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEndpointBadRequestCode is the HTTP code returned for type UpdateEndpointBadRequest
const UpdateEndpointBadRequestCode int = 400

/*UpdateEndpointBadRequest Invalid input

swagger:response updateEndpointBadRequest
*/
type UpdateEndpointBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateEndpointBadRequest creates UpdateEndpointBadRequest with default headers values
func NewUpdateEndpointBadRequest() *UpdateEndpointBadRequest {

	return &UpdateEndpointBadRequest{}
}

// WithPayload adds the payload to the update endpoint bad request response
func (o *UpdateEndpointBadRequest) WithPayload(payload *v1.Error) *UpdateEndpointBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint bad request response
func (o *UpdateEndpointBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEndpointUnauthorizedCode is the HTTP code returned for type UpdateEndpointUnauthorized
const UpdateEndpointUnauthorizedCode int = 401

/*UpdateEndpointUnauthorized Unauthorized Request

swagger:response updateEndpointUnauthorized
*/
type UpdateEndpointUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateEndpointUnauthorized creates UpdateEndpointUnauthorized with default headers values
func NewUpdateEndpointUnauthorized() *UpdateEndpointUnauthorized {

	return &UpdateEndpointUnauthorized{}
}

// WithPayload adds the payload to the update endpoint unauthorized response
func (o *UpdateEndpointUnauthorized) WithPayload(payload *v1.Error) *UpdateEndpointUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint unauthorized response
func (o *UpdateEndpointUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEndpointForbiddenCode is the HTTP code returned for type UpdateEndpointForbidden
const UpdateEndpointForbiddenCode int = 403

/*UpdateEndpointForbidden access to this resource is forbidden

swagger:response updateEndpointForbidden
*/
type UpdateEndpointForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateEndpointForbidden creates UpdateEndpointForbidden with default headers values
func NewUpdateEndpointForbidden() *UpdateEndpointForbidden {

	return &UpdateEndpointForbidden{}
}

// WithPayload adds the payload to the update endpoint forbidden response
func (o *UpdateEndpointForbidden) WithPayload(payload *v1.Error) *UpdateEndpointForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint forbidden response
func (o *UpdateEndpointForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateEndpointNotFoundCode is the HTTP code returned for type UpdateEndpointNotFound
const UpdateEndpointNotFoundCode int = 404

/*UpdateEndpointNotFound Endpoint not found

swagger:response updateEndpointNotFound
*/
type UpdateEndpointNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateEndpointNotFound creates UpdateEndpointNotFound with default headers values
func NewUpdateEndpointNotFound() *UpdateEndpointNotFound {

	return &UpdateEndpointNotFound{}
}

// WithPayload adds the payload to the update endpoint not found response
func (o *UpdateEndpointNotFound) WithPayload(payload *v1.Error) *UpdateEndpointNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint not found response
func (o *UpdateEndpointNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateEndpointDefault Unknown error

swagger:response updateEndpointDefault
*/
type UpdateEndpointDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateEndpointDefault creates UpdateEndpointDefault with default headers values
func NewUpdateEndpointDefault(code int) *UpdateEndpointDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateEndpointDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update endpoint default response
func (o *UpdateEndpointDefault) WithStatusCode(code int) *UpdateEndpointDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update endpoint default response
func (o *UpdateEndpointDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update endpoint default response
func (o *UpdateEndpointDefault) WithPayload(payload *v1.Error) *UpdateEndpointDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update endpoint default response
func (o *UpdateEndpointDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateEndpointDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
