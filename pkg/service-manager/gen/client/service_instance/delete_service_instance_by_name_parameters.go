///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package service_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewDeleteServiceInstanceByNameParams creates a new DeleteServiceInstanceByNameParams object
// with the default values initialized.
func NewDeleteServiceInstanceByNameParams() *DeleteServiceInstanceByNameParams {
	var ()
	return &DeleteServiceInstanceByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteServiceInstanceByNameParamsWithTimeout creates a new DeleteServiceInstanceByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteServiceInstanceByNameParamsWithTimeout(timeout time.Duration) *DeleteServiceInstanceByNameParams {
	var ()
	return &DeleteServiceInstanceByNameParams{

		timeout: timeout,
	}
}

// NewDeleteServiceInstanceByNameParamsWithContext creates a new DeleteServiceInstanceByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteServiceInstanceByNameParamsWithContext(ctx context.Context) *DeleteServiceInstanceByNameParams {
	var ()
	return &DeleteServiceInstanceByNameParams{

		Context: ctx,
	}
}

// NewDeleteServiceInstanceByNameParamsWithHTTPClient creates a new DeleteServiceInstanceByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteServiceInstanceByNameParamsWithHTTPClient(client *http.Client) *DeleteServiceInstanceByNameParams {
	var ()
	return &DeleteServiceInstanceByNameParams{
		HTTPClient: client,
	}
}

/*DeleteServiceInstanceByNameParams contains all the parameters to send to the API endpoint
for the delete service instance by name operation typically these are written to a http.Request
*/
type DeleteServiceInstanceByNameParams struct {

	/*ServiceInstanceName
	  Name of service instance to return

	*/
	ServiceInstanceName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) WithTimeout(timeout time.Duration) *DeleteServiceInstanceByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) WithContext(ctx context.Context) *DeleteServiceInstanceByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) WithHTTPClient(client *http.Client) *DeleteServiceInstanceByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithServiceInstanceName adds the serviceInstanceName to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) WithServiceInstanceName(serviceInstanceName string) *DeleteServiceInstanceByNameParams {
	o.SetServiceInstanceName(serviceInstanceName)
	return o
}

// SetServiceInstanceName adds the serviceInstanceName to the delete service instance by name params
func (o *DeleteServiceInstanceByNameParams) SetServiceInstanceName(serviceInstanceName string) {
	o.ServiceInstanceName = serviceInstanceName
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteServiceInstanceByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param serviceInstanceName
	if err := r.SetPathParam("serviceInstanceName", o.ServiceInstanceName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
