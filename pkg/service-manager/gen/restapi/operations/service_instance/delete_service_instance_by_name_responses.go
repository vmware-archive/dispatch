///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package service_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware/dispatch/pkg/service-manager/gen/models"
)

// DeleteServiceInstanceByNameOKCode is the HTTP code returned for type DeleteServiceInstanceByNameOK
const DeleteServiceInstanceByNameOKCode int = 200

/*DeleteServiceInstanceByNameOK successful operation

swagger:response deleteServiceInstanceByNameOK
*/
type DeleteServiceInstanceByNameOK struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceInstance `json:"body,omitempty"`
}

// NewDeleteServiceInstanceByNameOK creates DeleteServiceInstanceByNameOK with default headers values
func NewDeleteServiceInstanceByNameOK() *DeleteServiceInstanceByNameOK {

	return &DeleteServiceInstanceByNameOK{}
}

// WithPayload adds the payload to the delete service instance by name o k response
func (o *DeleteServiceInstanceByNameOK) WithPayload(payload *models.ServiceInstance) *DeleteServiceInstanceByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete service instance by name o k response
func (o *DeleteServiceInstanceByNameOK) SetPayload(payload *models.ServiceInstance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServiceInstanceByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteServiceInstanceByNameBadRequestCode is the HTTP code returned for type DeleteServiceInstanceByNameBadRequest
const DeleteServiceInstanceByNameBadRequestCode int = 400

/*DeleteServiceInstanceByNameBadRequest Invalid name supplied

swagger:response deleteServiceInstanceByNameBadRequest
*/
type DeleteServiceInstanceByNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServiceInstanceByNameBadRequest creates DeleteServiceInstanceByNameBadRequest with default headers values
func NewDeleteServiceInstanceByNameBadRequest() *DeleteServiceInstanceByNameBadRequest {

	return &DeleteServiceInstanceByNameBadRequest{}
}

// WithPayload adds the payload to the delete service instance by name bad request response
func (o *DeleteServiceInstanceByNameBadRequest) WithPayload(payload *models.Error) *DeleteServiceInstanceByNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete service instance by name bad request response
func (o *DeleteServiceInstanceByNameBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServiceInstanceByNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteServiceInstanceByNameNotFoundCode is the HTTP code returned for type DeleteServiceInstanceByNameNotFound
const DeleteServiceInstanceByNameNotFoundCode int = 404

/*DeleteServiceInstanceByNameNotFound Service instance not found

swagger:response deleteServiceInstanceByNameNotFound
*/
type DeleteServiceInstanceByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServiceInstanceByNameNotFound creates DeleteServiceInstanceByNameNotFound with default headers values
func NewDeleteServiceInstanceByNameNotFound() *DeleteServiceInstanceByNameNotFound {

	return &DeleteServiceInstanceByNameNotFound{}
}

// WithPayload adds the payload to the delete service instance by name not found response
func (o *DeleteServiceInstanceByNameNotFound) WithPayload(payload *models.Error) *DeleteServiceInstanceByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete service instance by name not found response
func (o *DeleteServiceInstanceByNameNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServiceInstanceByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteServiceInstanceByNameDefault Generic error response

swagger:response deleteServiceInstanceByNameDefault
*/
type DeleteServiceInstanceByNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteServiceInstanceByNameDefault creates DeleteServiceInstanceByNameDefault with default headers values
func NewDeleteServiceInstanceByNameDefault(code int) *DeleteServiceInstanceByNameDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteServiceInstanceByNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete service instance by name default response
func (o *DeleteServiceInstanceByNameDefault) WithStatusCode(code int) *DeleteServiceInstanceByNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete service instance by name default response
func (o *DeleteServiceInstanceByNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete service instance by name default response
func (o *DeleteServiceInstanceByNameDefault) WithPayload(payload *models.Error) *DeleteServiceInstanceByNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete service instance by name default response
func (o *DeleteServiceInstanceByNameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServiceInstanceByNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
