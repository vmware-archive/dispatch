///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package service_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware/dispatch/pkg/service-manager/gen/models"
)

// GetServiceInstancesOKCode is the HTTP code returned for type GetServiceInstancesOK
const GetServiceInstancesOKCode int = 200

/*GetServiceInstancesOK successful operation

swagger:response getServiceInstancesOK
*/
type GetServiceInstancesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.ServiceInstance `json:"body,omitempty"`
}

// NewGetServiceInstancesOK creates GetServiceInstancesOK with default headers values
func NewGetServiceInstancesOK() *GetServiceInstancesOK {

	return &GetServiceInstancesOK{}
}

// WithPayload adds the payload to the get service instances o k response
func (o *GetServiceInstancesOK) WithPayload(payload []*models.ServiceInstance) *GetServiceInstancesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service instances o k response
func (o *GetServiceInstancesOK) SetPayload(payload []*models.ServiceInstance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceInstancesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make([]*models.ServiceInstance, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetServiceInstancesBadRequestCode is the HTTP code returned for type GetServiceInstancesBadRequest
const GetServiceInstancesBadRequestCode int = 400

/*GetServiceInstancesBadRequest Invalid input

swagger:response getServiceInstancesBadRequest
*/
type GetServiceInstancesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServiceInstancesBadRequest creates GetServiceInstancesBadRequest with default headers values
func NewGetServiceInstancesBadRequest() *GetServiceInstancesBadRequest {

	return &GetServiceInstancesBadRequest{}
}

// WithPayload adds the payload to the get service instances bad request response
func (o *GetServiceInstancesBadRequest) WithPayload(payload *models.Error) *GetServiceInstancesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service instances bad request response
func (o *GetServiceInstancesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceInstancesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetServiceInstancesDefault Generic error response

swagger:response getServiceInstancesDefault
*/
type GetServiceInstancesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetServiceInstancesDefault creates GetServiceInstancesDefault with default headers values
func NewGetServiceInstancesDefault(code int) *GetServiceInstancesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetServiceInstancesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get service instances default response
func (o *GetServiceInstancesDefault) WithStatusCode(code int) *GetServiceInstancesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get service instances default response
func (o *GetServiceInstancesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get service instances default response
func (o *GetServiceInstancesDefault) WithPayload(payload *models.Error) *GetServiceInstancesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service instances default response
func (o *GetServiceInstancesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceInstancesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
