///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package service_instance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware/dispatch/pkg/service-manager/gen/models"
)

// AddServiceInstanceCreatedCode is the HTTP code returned for type AddServiceInstanceCreated
const AddServiceInstanceCreatedCode int = 201

/*AddServiceInstanceCreated created

swagger:response addServiceInstanceCreated
*/
type AddServiceInstanceCreated struct {

	/*
	  In: Body
	*/
	Payload *models.ServiceInstance `json:"body,omitempty"`
}

// NewAddServiceInstanceCreated creates AddServiceInstanceCreated with default headers values
func NewAddServiceInstanceCreated() *AddServiceInstanceCreated {

	return &AddServiceInstanceCreated{}
}

// WithPayload adds the payload to the add service instance created response
func (o *AddServiceInstanceCreated) WithPayload(payload *models.ServiceInstance) *AddServiceInstanceCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add service instance created response
func (o *AddServiceInstanceCreated) SetPayload(payload *models.ServiceInstance) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddServiceInstanceCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddServiceInstanceBadRequestCode is the HTTP code returned for type AddServiceInstanceBadRequest
const AddServiceInstanceBadRequestCode int = 400

/*AddServiceInstanceBadRequest Invalid input

swagger:response addServiceInstanceBadRequest
*/
type AddServiceInstanceBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddServiceInstanceBadRequest creates AddServiceInstanceBadRequest with default headers values
func NewAddServiceInstanceBadRequest() *AddServiceInstanceBadRequest {

	return &AddServiceInstanceBadRequest{}
}

// WithPayload adds the payload to the add service instance bad request response
func (o *AddServiceInstanceBadRequest) WithPayload(payload *models.Error) *AddServiceInstanceBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add service instance bad request response
func (o *AddServiceInstanceBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddServiceInstanceBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddServiceInstanceConflictCode is the HTTP code returned for type AddServiceInstanceConflict
const AddServiceInstanceConflictCode int = 409

/*AddServiceInstanceConflict Already Exists

swagger:response addServiceInstanceConflict
*/
type AddServiceInstanceConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddServiceInstanceConflict creates AddServiceInstanceConflict with default headers values
func NewAddServiceInstanceConflict() *AddServiceInstanceConflict {

	return &AddServiceInstanceConflict{}
}

// WithPayload adds the payload to the add service instance conflict response
func (o *AddServiceInstanceConflict) WithPayload(payload *models.Error) *AddServiceInstanceConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add service instance conflict response
func (o *AddServiceInstanceConflict) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddServiceInstanceConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddServiceInstanceDefault Generic error response

swagger:response addServiceInstanceDefault
*/
type AddServiceInstanceDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddServiceInstanceDefault creates AddServiceInstanceDefault with default headers values
func NewAddServiceInstanceDefault(code int) *AddServiceInstanceDefault {
	if code <= 0 {
		code = 500
	}

	return &AddServiceInstanceDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add service instance default response
func (o *AddServiceInstanceDefault) WithStatusCode(code int) *AddServiceInstanceDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add service instance default response
func (o *AddServiceInstanceDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add service instance default response
func (o *AddServiceInstanceDefault) WithPayload(payload *models.Error) *AddServiceInstanceDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add service instance default response
func (o *AddServiceInstanceDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddServiceInstanceDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
