// Package mocks generated by mockery v1.0.0
package mocks

import entities "github.com/vmware/dispatch/pkg/service-manager/entities"
import entitystore "github.com/vmware/dispatch/pkg/entity-store"
import mock "github.com/stretchr/testify/mock"

// BrokerClient is an autogenerated mock type for the BrokerClient type
type BrokerClient struct {
	mock.Mock
}

// CreateBinding provides a mock function with given fields: _a0, _a1
func (_m *BrokerClient) CreateBinding(_a0 *entities.ServiceInstance, _a1 *entities.ServiceBinding) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.ServiceInstance, *entities.ServiceBinding) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateService provides a mock function with given fields: _a0, _a1
func (_m *BrokerClient) CreateService(_a0 *entities.ServiceClass, _a1 *entities.ServiceInstance) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.ServiceClass, *entities.ServiceInstance) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteService provides a mock function with given fields: _a0
func (_m *BrokerClient) DeleteService(_a0 *entities.ServiceInstance) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entities.ServiceInstance) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ListServiceBindings provides a mock function with given fields:
func (_m *BrokerClient) ListServiceBindings() ([]entitystore.Entity, error) {
	ret := _m.Called()

	var r0 []entitystore.Entity
	if rf, ok := ret.Get(0).(func() []entitystore.Entity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entitystore.Entity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListServiceClasses provides a mock function with given fields:
func (_m *BrokerClient) ListServiceClasses() ([]entitystore.Entity, error) {
	ret := _m.Called()

	var r0 []entitystore.Entity
	if rf, ok := ret.Get(0).(func() []entitystore.Entity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entitystore.Entity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListServiceInstances provides a mock function with given fields:
func (_m *BrokerClient) ListServiceInstances() ([]entitystore.Entity, error) {
	ret := _m.Called()

	var r0 []entitystore.Entity
	if rf, ok := ret.Get(0).(func() []entitystore.Entity); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entitystore.Entity)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
