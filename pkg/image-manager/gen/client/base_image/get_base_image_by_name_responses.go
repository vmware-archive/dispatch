///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package base_image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/image-manager/gen/models"
)

// GetBaseImageByNameReader is a Reader for the GetBaseImageByName structure.
type GetBaseImageByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBaseImageByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBaseImageByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetBaseImageByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBaseImageByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBaseImageByNameDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBaseImageByNameOK creates a GetBaseImageByNameOK with default headers values
func NewGetBaseImageByNameOK() *GetBaseImageByNameOK {
	return &GetBaseImageByNameOK{}
}

/*GetBaseImageByNameOK handles this case with default header values.

successful operation
*/
type GetBaseImageByNameOK struct {
	Payload *models.BaseImage
}

func (o *GetBaseImageByNameOK) Error() string {
	return fmt.Sprintf("[GET /base/{baseImageName}][%d] getBaseImageByNameOK  %+v", 200, o.Payload)
}

func (o *GetBaseImageByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BaseImage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImageByNameBadRequest creates a GetBaseImageByNameBadRequest with default headers values
func NewGetBaseImageByNameBadRequest() *GetBaseImageByNameBadRequest {
	return &GetBaseImageByNameBadRequest{}
}

/*GetBaseImageByNameBadRequest handles this case with default header values.

Invalid ID supplied
*/
type GetBaseImageByNameBadRequest struct {
	Payload *models.Error
}

func (o *GetBaseImageByNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /base/{baseImageName}][%d] getBaseImageByNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetBaseImageByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImageByNameNotFound creates a GetBaseImageByNameNotFound with default headers values
func NewGetBaseImageByNameNotFound() *GetBaseImageByNameNotFound {
	return &GetBaseImageByNameNotFound{}
}

/*GetBaseImageByNameNotFound handles this case with default header values.

Base image not found
*/
type GetBaseImageByNameNotFound struct {
	Payload *models.Error
}

func (o *GetBaseImageByNameNotFound) Error() string {
	return fmt.Sprintf("[GET /base/{baseImageName}][%d] getBaseImageByNameNotFound  %+v", 404, o.Payload)
}

func (o *GetBaseImageByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImageByNameDefault creates a GetBaseImageByNameDefault with default headers values
func NewGetBaseImageByNameDefault(code int) *GetBaseImageByNameDefault {
	return &GetBaseImageByNameDefault{
		_statusCode: code,
	}
}

/*GetBaseImageByNameDefault handles this case with default header values.

Generic error response
*/
type GetBaseImageByNameDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get base image by name default response
func (o *GetBaseImageByNameDefault) Code() int {
	return o._statusCode
}

func (o *GetBaseImageByNameDefault) Error() string {
	return fmt.Sprintf("[GET /base/{baseImageName}][%d] getBaseImageByName default  %+v", o._statusCode, o.Payload)
}

func (o *GetBaseImageByNameDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
