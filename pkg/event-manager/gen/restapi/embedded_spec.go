///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "VMware Dispatch Event Manager\n",
    "title": "Event Manager",
    "contact": {
      "email": "dispatch@vmware.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1/event",
  "paths": {
    "/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "events"
        ],
        "summary": "Emit an event",
        "operationId": "emitEvent",
        "parameters": [
          {
            "description": "emission object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Emission"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event emitted",
            "schema": {
              "$ref": "#/definitions/Emission"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/drivers": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "drivers"
        ],
        "summary": "List all existing drivers",
        "operationId": "getDrivers",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter based on tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getDriversOKBody"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "drivers"
        ],
        "summary": "Create a new driver",
        "operationId": "addDriver",
        "parameters": [
          {
            "description": "driver object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Driver created",
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/drivers/{driverName}": {
      "get": {
        "description": "Returns a single driver",
        "produces": [
          "application/json"
        ],
        "tags": [
          "drivers"
        ],
        "summary": "Find driver by Name",
        "operationId": "getDriver",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          },
          "400": {
            "description": "Invalid Name supplied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Driver not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "drivers"
        ],
        "summary": "Deletes a driver",
        "operationId": "deleteDriver",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Driver"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Driver not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter based on tags",
          "name": "tags",
          "in": "query"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of the subscription to work on",
          "name": "driverName",
          "in": "path",
          "required": true
        }
      ]
    },
    "/subscriptions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "List all existing subscriptions",
        "operationId": "getSubscriptions",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter based on tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/getSubscriptionsOKBody"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "Add a new subscription",
        "operationId": "addSubscription",
        "parameters": [
          {
            "description": "subscription object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Subscription created",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionName}": {
      "get": {
        "description": "Returns a single subscription",
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "Find subscription by Name",
        "operationId": "getSubscription",
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Invalid Name supplied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Subscription not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Unknown error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscriptions"
        ],
        "summary": "Deletes a subscription",
        "operationId": "deleteSubscription",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Subscription not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter based on tags",
          "name": "tags",
          "in": "query"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of the subscription to work on",
          "name": "subscriptionName",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "Config": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "Driver": {
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "config": {
          "$ref": "#/definitions/driverConfig"
        },
        "createdTime": {
          "type": "integer",
          "readOnly": true
        },
        "modifiedTime": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/Status",
          "readOnly": true
        },
        "tags": {
          "$ref": "#/definitions/driverTags"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Emission": {
      "type": "object",
      "required": [
        "topic"
      ],
      "properties": {
        "emittedTime": {
          "type": "integer",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "payload": {
          "type": "object"
        },
        "tags": {
          "$ref": "#/definitions/emissionTags"
        },
        "topic": {
          "type": "string",
          "pattern": "^[\\w\\d\\-\\.]+$"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "functionError": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "userError": {
          "type": "object"
        }
      }
    },
    "Status": {
      "type": "string",
      "enum": [
        "CREATING",
        "READY",
        "UPDATING",
        "ERROR",
        "DELETING"
      ]
    },
    "Subscriber": {
      "type": "object",
      "required": [
        "type",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "function",
            "event"
          ]
        }
      }
    },
    "Subscription": {
      "type": "object",
      "required": [
        "topic",
        "subscriber"
      ],
      "properties": {
        "createdTime": {
          "type": "integer",
          "readOnly": true
        },
        "id": {
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "modifiedTime": {
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "pattern": "^[\\w\\d\\-]+$"
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "$ref": "#/definitions/Status",
          "readOnly": true
        },
        "subscriber": {
          "$ref": "#/definitions/Subscriber"
        },
        "tags": {
          "$ref": "#/definitions/subscriptionTags"
        },
        "topic": {
          "type": "string",
          "pattern": "^[\\w\\d\\-\\.]+$"
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "driverConfig": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Config"
      },
      "x-go-gen-location": "models"
    },
    "driverTags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "x-go-gen-location": "models"
    },
    "emissionTags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "x-go-gen-location": "models"
    },
    "getDriversOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Driver"
      },
      "x-go-gen-location": "operations"
    },
    "getSubscriptionsOKBody": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subscription"
      },
      "x-go-gen-location": "operations"
    },
    "subscriptionTags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "x-go-gen-location": "models"
    }
  },
  "securityDefinitions": {
    "cookie": {
      "description": "use cookies for authentication, when the user already logged in",
      "type": "apiKey",
      "name": "Cookie",
      "in": "header"
    }
  },
  "security": [
    {
      "cookie": []
    }
  ],
  "tags": [
    {
      "description": "Operations on subscriptions",
      "name": "subscriptions"
    },
    {
      "description": "Operations on events",
      "name": "events"
    },
    {
      "description": "Operations on event drivers",
      "name": "drivers"
    }
  ]
}`))
}
