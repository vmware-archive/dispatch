///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package drivers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/vmware/dispatch/pkg/event-manager/gen/models"
)

// UpdateDriverOKCode is the HTTP code returned for type UpdateDriverOK
const UpdateDriverOKCode int = 200

/*UpdateDriverOK Successful operation

swagger:response updateDriverOK
*/
type UpdateDriverOK struct {

	/*
	  In: Body
	*/
	Payload *models.Driver `json:"body,omitempty"`
}

// NewUpdateDriverOK creates UpdateDriverOK with default headers values
func NewUpdateDriverOK() *UpdateDriverOK {

	return &UpdateDriverOK{}
}

// WithPayload adds the payload to the update driver o k response
func (o *UpdateDriverOK) WithPayload(payload *models.Driver) *UpdateDriverOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update driver o k response
func (o *UpdateDriverOK) SetPayload(payload *models.Driver) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDriverOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDriverBadRequestCode is the HTTP code returned for type UpdateDriverBadRequest
const UpdateDriverBadRequestCode int = 400

/*UpdateDriverBadRequest Invalid Name supplied

swagger:response updateDriverBadRequest
*/
type UpdateDriverBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateDriverBadRequest creates UpdateDriverBadRequest with default headers values
func NewUpdateDriverBadRequest() *UpdateDriverBadRequest {

	return &UpdateDriverBadRequest{}
}

// WithPayload adds the payload to the update driver bad request response
func (o *UpdateDriverBadRequest) WithPayload(payload *models.Error) *UpdateDriverBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update driver bad request response
func (o *UpdateDriverBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDriverBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDriverNotFoundCode is the HTTP code returned for type UpdateDriverNotFound
const UpdateDriverNotFoundCode int = 404

/*UpdateDriverNotFound Driver not found

swagger:response updateDriverNotFound
*/
type UpdateDriverNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateDriverNotFound creates UpdateDriverNotFound with default headers values
func NewUpdateDriverNotFound() *UpdateDriverNotFound {

	return &UpdateDriverNotFound{}
}

// WithPayload adds the payload to the update driver not found response
func (o *UpdateDriverNotFound) WithPayload(payload *models.Error) *UpdateDriverNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update driver not found response
func (o *UpdateDriverNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDriverNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateDriverInternalServerErrorCode is the HTTP code returned for type UpdateDriverInternalServerError
const UpdateDriverInternalServerErrorCode int = 500

/*UpdateDriverInternalServerError Internal server error

swagger:response updateDriverInternalServerError
*/
type UpdateDriverInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateDriverInternalServerError creates UpdateDriverInternalServerError with default headers values
func NewUpdateDriverInternalServerError() *UpdateDriverInternalServerError {

	return &UpdateDriverInternalServerError{}
}

// WithPayload adds the payload to the update driver internal server error response
func (o *UpdateDriverInternalServerError) WithPayload(payload *models.Error) *UpdateDriverInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update driver internal server error response
func (o *UpdateDriverInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDriverInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateDriverDefault Unknown error

swagger:response updateDriverDefault
*/
type UpdateDriverDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateDriverDefault creates UpdateDriverDefault with default headers values
func NewUpdateDriverDefault(code int) *UpdateDriverDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateDriverDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update driver default response
func (o *UpdateDriverDefault) WithStatusCode(code int) *UpdateDriverDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update driver default response
func (o *UpdateDriverDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update driver default response
func (o *UpdateDriverDefault) WithPayload(payload *models.Error) *UpdateDriverDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update driver default response
func (o *UpdateDriverDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateDriverDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
