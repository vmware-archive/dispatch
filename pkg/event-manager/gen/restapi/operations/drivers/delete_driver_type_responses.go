///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package drivers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/event-manager/gen/models"
)

// DeleteDriverTypeOKCode is the HTTP code returned for type DeleteDriverTypeOK
const DeleteDriverTypeOKCode int = 200

/*DeleteDriverTypeOK successful operation

swagger:response deleteDriverTypeOK
*/
type DeleteDriverTypeOK struct {

	/*
	  In: Body
	*/
	Payload *models.DriverType `json:"body,omitempty"`
}

// NewDeleteDriverTypeOK creates DeleteDriverTypeOK with default headers values
func NewDeleteDriverTypeOK() *DeleteDriverTypeOK {
	return &DeleteDriverTypeOK{}
}

// WithPayload adds the payload to the delete driver type o k response
func (o *DeleteDriverTypeOK) WithPayload(payload *models.DriverType) *DeleteDriverTypeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete driver type o k response
func (o *DeleteDriverTypeOK) SetPayload(payload *models.DriverType) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDriverTypeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDriverTypeBadRequestCode is the HTTP code returned for type DeleteDriverTypeBadRequest
const DeleteDriverTypeBadRequestCode int = 400

/*DeleteDriverTypeBadRequest Invalid ID supplied

swagger:response deleteDriverTypeBadRequest
*/
type DeleteDriverTypeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDriverTypeBadRequest creates DeleteDriverTypeBadRequest with default headers values
func NewDeleteDriverTypeBadRequest() *DeleteDriverTypeBadRequest {
	return &DeleteDriverTypeBadRequest{}
}

// WithPayload adds the payload to the delete driver type bad request response
func (o *DeleteDriverTypeBadRequest) WithPayload(payload *models.Error) *DeleteDriverTypeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete driver type bad request response
func (o *DeleteDriverTypeBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDriverTypeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDriverTypeNotFoundCode is the HTTP code returned for type DeleteDriverTypeNotFound
const DeleteDriverTypeNotFoundCode int = 404

/*DeleteDriverTypeNotFound Driver not found

swagger:response deleteDriverTypeNotFound
*/
type DeleteDriverTypeNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDriverTypeNotFound creates DeleteDriverTypeNotFound with default headers values
func NewDeleteDriverTypeNotFound() *DeleteDriverTypeNotFound {
	return &DeleteDriverTypeNotFound{}
}

// WithPayload adds the payload to the delete driver type not found response
func (o *DeleteDriverTypeNotFound) WithPayload(payload *models.Error) *DeleteDriverTypeNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete driver type not found response
func (o *DeleteDriverTypeNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDriverTypeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteDriverTypeInternalServerErrorCode is the HTTP code returned for type DeleteDriverTypeInternalServerError
const DeleteDriverTypeInternalServerErrorCode int = 500

/*DeleteDriverTypeInternalServerError Internal server error

swagger:response deleteDriverTypeInternalServerError
*/
type DeleteDriverTypeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDriverTypeInternalServerError creates DeleteDriverTypeInternalServerError with default headers values
func NewDeleteDriverTypeInternalServerError() *DeleteDriverTypeInternalServerError {
	return &DeleteDriverTypeInternalServerError{}
}

// WithPayload adds the payload to the delete driver type internal server error response
func (o *DeleteDriverTypeInternalServerError) WithPayload(payload *models.Error) *DeleteDriverTypeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete driver type internal server error response
func (o *DeleteDriverTypeInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDriverTypeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteDriverTypeDefault Generic error response

swagger:response deleteDriverTypeDefault
*/
type DeleteDriverTypeDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteDriverTypeDefault creates DeleteDriverTypeDefault with default headers values
func NewDeleteDriverTypeDefault(code int) *DeleteDriverTypeDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteDriverTypeDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete driver type default response
func (o *DeleteDriverTypeDefault) WithStatusCode(code int) *DeleteDriverTypeDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete driver type default response
func (o *DeleteDriverTypeDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete driver type default response
func (o *DeleteDriverTypeDefault) WithPayload(payload *models.Error) *DeleteDriverTypeDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete driver type default response
func (o *DeleteDriverTypeDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteDriverTypeDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
