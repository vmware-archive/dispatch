///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "VMware Dispatch Image Manager\n",
    "title": "Image Manager",
    "contact": {
      "email": "dispatch@vmware.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/baseimage": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "List all existing base images",
        "operationId": "getBaseImages",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter on base image tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models.json#/definitions/BaseImage"
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Add a new base image",
        "operationId": "addBaseImage",
        "parameters": [
          {
            "description": "Base image object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/orgIDParam"
        },
        {
          "$ref": "#/parameters/projectNameParam"
        }
      ]
    },
    "/baseimage/{baseImageName}": {
      "get": {
        "description": "Returns a single base image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Find base image by Name",
        "operationId": "getBaseImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Base image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Updates a base image",
        "operationId": "updateBaseImageByName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Deletes a base image",
        "operationId": "deleteBaseImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "./models.json#/definitions/BaseImage"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Base image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/orgIDParam"
        },
        {
          "$ref": "#/parameters/projectNameParam"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of base image to return",
          "name": "baseImageName",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter based on tags",
          "name": "tags",
          "in": "query"
        }
      ]
    },
    "/image": {
      "get": {
        "description": "List all images",
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Get all images",
        "operationId": "getImages",
        "parameters": [
          {
            "type": "string",
            "description": "image runtime language",
            "name": "language",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter on image tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "./models.json#/definitions/Image"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Add a new image",
        "operationId": "addImage",
        "parameters": [
          {
            "description": "Image object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/orgIDParam"
        },
        {
          "$ref": "#/parameters/projectNameParam"
        }
      ]
    },
    "/image/{imageName}": {
      "get": {
        "description": "Returns a single image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Find image by ID",
        "operationId": "getImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Updates an image",
        "operationId": "updateImageByName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated",
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Deletes an image",
        "operationId": "deleteImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "./models.json#/definitions/Image"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "./models.json#/definitions/Error"
            }
          }
        }
      },
      "parameters": [
        {
          "$ref": "#/parameters/orgIDParam"
        },
        {
          "$ref": "#/parameters/projectNameParam"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of image to return",
          "name": "imageName",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter on image tags",
          "name": "tags",
          "in": "query"
        }
      ]
    }
  },
  "parameters": {
    "orgIDParam": {
      "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
      "type": "string",
      "default": "default",
      "name": "X-Dispatch-Org",
      "in": "header"
    },
    "projectNameParam": {
      "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
      "type": "string",
      "default": "default",
      "name": "X-Dispatch-Project",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Operations on base-images",
      "name": "baseImage"
    },
    {
      "description": "Operations on images",
      "name": "image"
    },
    {
      "description": "Operations on system packages",
      "name": "systemPackage"
    },
    {
      "description": "Operations on runtime packages",
      "name": "runtimePackage"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "VMware Dispatch Image Manager\n",
    "title": "Image Manager",
    "contact": {
      "email": "dispatch@vmware.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/v1",
  "paths": {
    "/baseimage": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "List all existing base images",
        "operationId": "getBaseImages",
        "parameters": [
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter on base image tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/baseImage"
              }
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Add a new base image",
        "operationId": "addBaseImage",
        "parameters": [
          {
            "description": "Base image object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Org",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Project",
          "in": "header"
        }
      ]
    },
    "/baseimage/{baseImageName}": {
      "get": {
        "description": "Returns a single base image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Find base image by Name",
        "operationId": "getBaseImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Base image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Updates a base image",
        "operationId": "updateBaseImageByName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "baseImage"
        ],
        "summary": "Deletes a base image",
        "operationId": "deleteBaseImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/baseImage"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Base image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Org",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Project",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of base image to return",
          "name": "baseImageName",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter based on tags",
          "name": "tags",
          "in": "query"
        }
      ]
    },
    "/image": {
      "get": {
        "description": "List all images",
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Get all images",
        "operationId": "getImages",
        "parameters": [
          {
            "type": "string",
            "description": "image runtime language",
            "name": "language",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "Filter on image tags",
            "name": "tags",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/image"
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Add a new image",
        "operationId": "addImage",
        "parameters": [
          {
            "description": "Image object",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "409": {
            "description": "Already Exists",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Org",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Project",
          "in": "header"
        }
      ]
    },
    "/image/{imageName}": {
      "get": {
        "description": "Returns a single image",
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Find image by ID",
        "operationId": "getImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Updates an image",
        "operationId": "updateImageByName",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/image"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "updated",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid input",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "delete": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "image"
        ],
        "summary": "Deletes an image",
        "operationId": "deleteImageByName",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/image"
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "401": {
            "description": "Unauthorized Request",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "403": {
            "description": "access to this resource is forbidden",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "404": {
            "description": "Image not found",
            "schema": {
              "$ref": "#/definitions/error"
            }
          },
          "default": {
            "description": "Generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      },
      "parameters": [
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Org",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "type": "string",
          "default": "default",
          "name": "X-Dispatch-Project",
          "in": "header"
        },
        {
          "pattern": "^[\\w\\d\\-]+$",
          "type": "string",
          "description": "Name of image to return",
          "name": "imageName",
          "in": "path",
          "required": true
        },
        {
          "type": "array",
          "items": {
            "type": "string"
          },
          "collectionFormat": "multi",
          "description": "Filter on image tags",
          "name": "tags",
          "in": "query"
        }
      ]
    }
  },
  "definitions": {
    "baseImage": {
      "description": "BaseImage base image",
      "type": "object",
      "required": [
        "dockerUrl",
        "language",
        "name"
      ],
      "properties": {
        "createdTime": {
          "description": "created time",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedTime"
        },
        "dockerUrl": {
          "description": "docker Url",
          "type": "string",
          "x-go-name": "DockerURL"
        },
        "groups": {
          "description": "groups",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Groups"
        },
        "id": {
          "description": "id",
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "kind": {
          "description": "kind",
          "type": "string",
          "pattern": "^[\\w\\d\\-]+$",
          "x-go-name": "Kind",
          "readOnly": true
        },
        "language": {
          "description": "language",
          "type": "string",
          "x-go-name": "Language"
        },
        "meta": {
          "$ref": "#/definitions/baseImageMeta"
        },
        "name": {
          "description": "name",
          "type": "string",
          "pattern": "^[\\w\\d][\\w\\d\\-]*$",
          "x-go-name": "Name"
        },
        "reason": {
          "description": "reason",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Reason"
        },
        "spec": {
          "description": "Spec spec",
          "type": "string",
          "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
        },
        "status": {
          "description": "Status status",
          "type": "string",
          "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
        },
        "tags": {
          "description": "tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/baseImageTagsItems"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "baseImageMeta": {
      "description": "Meta holds common metadata for API objects",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "backingObject": {
          "description": "BackingObject",
          "type": "object",
          "x-go-name": "BackingObject",
          "readOnly": true
        },
        "createdTime": {
          "description": "CreatedTime",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedTime",
          "readOnly": true
        },
        "name": {
          "description": "Name",
          "type": "string",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Name"
        },
        "org": {
          "description": "Org",
          "type": "string",
          "default": "default",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Org"
        },
        "project": {
          "description": "Project",
          "type": "string",
          "default": "default",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Project"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "baseImageTagsItems": {
      "description": "Tag tag",
      "type": "object",
      "properties": {
        "key": {
          "description": "key",
          "type": "string",
          "x-go-name": "Key"
        },
        "value": {
          "description": "value",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "error": {
      "description": "Error error",
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "description": "code",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Code"
        },
        "message": {
          "description": "message",
          "type": "string",
          "x-go-name": "Message"
        }
      },
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "image": {
      "description": "Image image",
      "type": "object",
      "required": [
        "baseImageName",
        "name"
      ],
      "properties": {
        "baseImageName": {
          "description": "base image name",
          "type": "string",
          "pattern": "^[\\w\\d][\\w\\d\\-]*$",
          "x-go-name": "BaseImageName"
        },
        "createdTime": {
          "description": "created time",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedTime"
        },
        "dockerUrl": {
          "description": "docker Url",
          "type": "string",
          "x-go-name": "DockerURL",
          "readOnly": true
        },
        "groups": {
          "description": "groups",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Groups"
        },
        "id": {
          "description": "id",
          "type": "string",
          "format": "uuid",
          "x-go-name": "ID"
        },
        "kind": {
          "description": "kind",
          "type": "string",
          "pattern": "^[\\w\\d\\-]+$",
          "x-go-name": "Kind",
          "readOnly": true
        },
        "language": {
          "description": "language",
          "type": "string",
          "x-go-name": "Language"
        },
        "meta": {
          "$ref": "#/definitions/imageMeta"
        },
        "name": {
          "description": "name",
          "type": "string",
          "pattern": "^[\\w\\d][\\w\\d\\-]*$",
          "x-go-name": "Name"
        },
        "reason": {
          "description": "reason",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Reason"
        },
        "runtimeDependencies": {
          "$ref": "#/definitions/imageRuntimeDependencies"
        },
        "spec": {
          "description": "Spec spec",
          "type": "string",
          "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
        },
        "status": {
          "description": "Status status",
          "type": "string",
          "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
        },
        "systemDependencies": {
          "$ref": "#/definitions/imageSystemDependencies"
        },
        "tags": {
          "description": "tags",
          "type": "array",
          "items": {
            "$ref": "#/definitions/imageTagsItems"
          },
          "x-go-name": "Tags"
        }
      },
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "imageMeta": {
      "description": "Meta holds common metadata for API objects",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "backingObject": {
          "description": "BackingObject",
          "type": "object",
          "x-go-name": "BackingObject",
          "readOnly": true
        },
        "createdTime": {
          "description": "CreatedTime",
          "type": "integer",
          "format": "int64",
          "x-go-name": "CreatedTime",
          "readOnly": true
        },
        "name": {
          "description": "Name",
          "type": "string",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Name"
        },
        "org": {
          "description": "Org",
          "type": "string",
          "default": "default",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Org"
        },
        "project": {
          "description": "Project",
          "type": "string",
          "default": "default",
          "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
          "x-go-name": "Project"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "imageRuntimeDependencies": {
      "description": "RuntimeDependencies runtime dependencies",
      "type": "object",
      "properties": {
        "manifest": {
          "description": "manifest",
          "type": "string",
          "x-go-name": "Manifest"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "imageSystemDependencies": {
      "description": "SystemDependencies system dependencies",
      "type": "object",
      "properties": {
        "packages": {
          "description": "packages",
          "type": "array",
          "items": {
            "$ref": "#/definitions/imageSystemDependenciesPackagesItems"
          },
          "x-go-name": "Packages"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "imageSystemDependenciesPackagesItems": {
      "description": "SystemDependency system dependency",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "description": "name",
          "type": "string",
          "x-go-name": "Name"
        },
        "version": {
          "description": "version",
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    },
    "imageTagsItems": {
      "description": "Tag tag",
      "type": "object",
      "properties": {
        "key": {
          "description": "key",
          "type": "string",
          "x-go-name": "Key"
        },
        "value": {
          "description": "value",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-gen-location": "models",
      "x-go-package": "github.com/vmware/dispatch/pkg/api/v1"
    }
  },
  "parameters": {
    "orgIDParam": {
      "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
      "type": "string",
      "default": "default",
      "name": "X-Dispatch-Org",
      "in": "header"
    },
    "projectNameParam": {
      "pattern": "^[\\w\\d][\\w\\d\\-]*[\\w\\d]|[\\w\\d]+$",
      "type": "string",
      "default": "default",
      "name": "X-Dispatch-Project",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Operations on base-images",
      "name": "baseImage"
    },
    {
      "description": "Operations on images",
      "name": "image"
    },
    {
      "description": "Operations on system packages",
      "name": "systemPackage"
    },
    {
      "description": "Operations on runtime packages",
      "name": "runtimePackage"
    }
  ]
}`))
}
