///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package base_image

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetBaseImagesReader is a Reader for the GetBaseImages structure.
type GetBaseImagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBaseImagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBaseImagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetBaseImagesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetBaseImagesForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetBaseImagesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetBaseImagesOK creates a GetBaseImagesOK with default headers values
func NewGetBaseImagesOK() *GetBaseImagesOK {
	return &GetBaseImagesOK{}
}

/*GetBaseImagesOK handles this case with default header values.

successful operation
*/
type GetBaseImagesOK struct {
	Payload []*v1.BaseImage
}

func (o *GetBaseImagesOK) Error() string {
	return fmt.Sprintf("[GET /baseimage][%d] getBaseImagesOK  %+v", 200, o.Payload)
}

func (o *GetBaseImagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImagesUnauthorized creates a GetBaseImagesUnauthorized with default headers values
func NewGetBaseImagesUnauthorized() *GetBaseImagesUnauthorized {
	return &GetBaseImagesUnauthorized{}
}

/*GetBaseImagesUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetBaseImagesUnauthorized struct {
	Payload *v1.Error
}

func (o *GetBaseImagesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /baseimage][%d] getBaseImagesUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBaseImagesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImagesForbidden creates a GetBaseImagesForbidden with default headers values
func NewGetBaseImagesForbidden() *GetBaseImagesForbidden {
	return &GetBaseImagesForbidden{}
}

/*GetBaseImagesForbidden handles this case with default header values.

access to this resource is forbidden
*/
type GetBaseImagesForbidden struct {
	Payload *v1.Error
}

func (o *GetBaseImagesForbidden) Error() string {
	return fmt.Sprintf("[GET /baseimage][%d] getBaseImagesForbidden  %+v", 403, o.Payload)
}

func (o *GetBaseImagesForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBaseImagesDefault creates a GetBaseImagesDefault with default headers values
func NewGetBaseImagesDefault(code int) *GetBaseImagesDefault {
	return &GetBaseImagesDefault{
		_statusCode: code,
	}
}

/*GetBaseImagesDefault handles this case with default header values.

Generic error response
*/
type GetBaseImagesDefault struct {
	_statusCode int

	Payload *v1.Error
}

// Code gets the status code for the get base images default response
func (o *GetBaseImagesDefault) Code() int {
	return o._statusCode
}

func (o *GetBaseImagesDefault) Error() string {
	return fmt.Sprintf("[GET /baseimage][%d] getBaseImages default  %+v", o._statusCode, o.Payload)
}

func (o *GetBaseImagesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
