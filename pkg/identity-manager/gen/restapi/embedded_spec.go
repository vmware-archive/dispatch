///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "VMware Dispatch Identity Manager\n",
    "title": "Identity Manager",
    "contact": {
      "email": "dispatch@vmware.com"
    },
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "summary": "an placehold root page, no authentication is required at this point",
        "operationId": "root",
        "responses": {
          "200": {
            "description": "home page",
            "schema": {
              "$ref": "#/definitions/message"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/login/vmware": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "the URL to which the Identity Provider (e.g. vIDM) will redirect the browser after authorization has been granted by the user",
        "operationId": "loginVmware",
        "parameters": [
          {
            "type": "string",
            "description": "required if authenticated, the authorization code (short-living) generated by the OpenID Provider, used for the client app to exchange for Access Token and/or Id_Token",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "description": "OAuth 2.0 state value. required if the Authorization Request included the state parameter. Set to the value received from the Client App (i.e. us).",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "description": "required if not authenticated, the error code returned if the End-User denies the request or the End-User authentication fails.",
            "name": "error",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional, Human-readable ASCII encoded text description of the error.",
            "name": "error_description",
            "in": "query"
          },
          {
            "type": "string",
            "description": "optional, URI of a web page that includes additional information about the error.",
            "name": "error_uri",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully logged in"
          },
          "302": {
            "description": "successfully logged in, redirect to home page",
            "schema": {
              "$ref": "#/definitions/redirect"
            },
            "headers": {
              "Location": {
                "type": "string",
                "description": "redirect location"
              },
              "Set-Cookie": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/iam": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "if not authenticated, redirect to '/login' endpoint, otherwise, go to the home page",
        "operationId": "login",
        "responses": {
          "302": {
            "description": "redirect",
            "headers": {
              "Location": {
                "type": "string",
                "description": "redirect location"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/iam/home": {
      "get": {
        "summary": "an placehold home page",
        "operationId": "home",
        "responses": {
          "200": {
            "description": "home page",
            "schema": {
              "$ref": "#/definitions/message"
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/iam/login/password": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "user logs in with username and password, the credientials are forwarded to the external identity provider to exchange for auth token",
        "operationId": "loginPassword",
        "parameters": [
          {
            "type": "string",
            "description": "user name",
            "name": "username",
            "in": "query"
          },
          {
            "type": "string",
            "description": "user password",
            "name": "password",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/auth"
            },
            "headers": {
              "Set-Cookie": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/iam/logout": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "logout the current user by clearing Application Session Cookies",
        "operationId": "logout",
        "security": [
          {
            "cookie": []
          }
        ],
        "responses": {
          "200": {
            "description": "successfully logged out",
            "schema": {
              "$ref": "#/definitions/message"
            },
            "headers": {
              "Set-Cookie": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    },
    "/v1/iam/redirect": {
      "get": {
        "summary": "redirect to localhost for vs-cli login (testing)",
        "operationId": "redirect",
        "parameters": [
          {
            "type": "string",
            "description": "the local server url redirecting to",
            "name": "redirect",
            "in": "query"
          }
        ],
        "responses": {
          "302": {
            "description": "redirect",
            "headers": {
              "Location": {
                "type": "string",
                "description": "redirect location"
              }
            }
          },
          "default": {
            "description": "error",
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "auth": {
      "type": "object",
      "properties": {
        "cookie": {
          "type": "string"
        }
      }
    },
    "error": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int64"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "message": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "redirect": {
      "type": "object",
      "required": [
        "location"
      ],
      "properties": {
        "location": {
          "type": "string"
        }
      }
    },
    "session": {
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "cookie": {
      "description": "use cookies for authentication, when the user already logged in",
      "type": "apiKey",
      "name": "Cookie",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "authentication"
    }
  ]
}`))
}
