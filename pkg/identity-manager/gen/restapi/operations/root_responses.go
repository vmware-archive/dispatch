///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/identity-manager/gen/models"
)

// RootOKCode is the HTTP code returned for type RootOK
const RootOKCode int = 200

/*RootOK home page

swagger:response rootOK
*/
type RootOK struct {

	/*
	  In: Body
	*/
	Payload *models.Message `json:"body,omitempty"`
}

// NewRootOK creates RootOK with default headers values
func NewRootOK() *RootOK {
	return &RootOK{}
}

// WithPayload adds the payload to the root o k response
func (o *RootOK) WithPayload(payload *models.Message) *RootOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the root o k response
func (o *RootOK) SetPayload(payload *models.Message) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RootOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*RootDefault error

swagger:response rootDefault
*/
type RootDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRootDefault creates RootDefault with default headers values
func NewRootDefault(code int) *RootDefault {
	if code <= 0 {
		code = 500
	}

	return &RootDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the root default response
func (o *RootDefault) WithStatusCode(code int) *RootDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the root default response
func (o *RootDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the root default response
func (o *RootDefault) WithPayload(payload *models.Error) *RootDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the root default response
func (o *RootDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RootDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
