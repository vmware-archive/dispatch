///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetVersionOKCode is the HTTP code returned for type GetVersionOK
const GetVersionOKCode int = 200

/*GetVersionOK version info

swagger:response getVersionOK
*/
type GetVersionOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Version `json:"body,omitempty"`
}

// NewGetVersionOK creates GetVersionOK with default headers values
func NewGetVersionOK() *GetVersionOK {

	return &GetVersionOK{}
}

// WithPayload adds the payload to the get version o k response
func (o *GetVersionOK) WithPayload(payload *v1.Version) *GetVersionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get version o k response
func (o *GetVersionOK) SetPayload(payload *v1.Version) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVersionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetVersionDefault error

swagger:response getVersionDefault
*/
type GetVersionDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetVersionDefault creates GetVersionDefault with default headers values
func NewGetVersionDefault(code int) *GetVersionDefault {
	if code <= 0 {
		code = 500
	}

	return &GetVersionDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get version default response
func (o *GetVersionDefault) WithStatusCode(code int) *GetVersionDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get version default response
func (o *GetVersionDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get version default response
func (o *GetVersionDefault) WithPayload(payload *v1.Error) *GetVersionDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get version default response
func (o *GetVersionDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetVersionDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
