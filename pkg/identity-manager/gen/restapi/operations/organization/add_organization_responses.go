///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// AddOrganizationCreatedCode is the HTTP code returned for type AddOrganizationCreated
const AddOrganizationCreatedCode int = 201

/*AddOrganizationCreated created

swagger:response addOrganizationCreated
*/
type AddOrganizationCreated struct {

	/*
	  In: Body
	*/
	Payload *v1.Organization `json:"body,omitempty"`
}

// NewAddOrganizationCreated creates AddOrganizationCreated with default headers values
func NewAddOrganizationCreated() *AddOrganizationCreated {

	return &AddOrganizationCreated{}
}

// WithPayload adds the payload to the add organization created response
func (o *AddOrganizationCreated) WithPayload(payload *v1.Organization) *AddOrganizationCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add organization created response
func (o *AddOrganizationCreated) SetPayload(payload *v1.Organization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrganizationCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrganizationBadRequestCode is the HTTP code returned for type AddOrganizationBadRequest
const AddOrganizationBadRequestCode int = 400

/*AddOrganizationBadRequest Invalid input

swagger:response addOrganizationBadRequest
*/
type AddOrganizationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddOrganizationBadRequest creates AddOrganizationBadRequest with default headers values
func NewAddOrganizationBadRequest() *AddOrganizationBadRequest {

	return &AddOrganizationBadRequest{}
}

// WithPayload adds the payload to the add organization bad request response
func (o *AddOrganizationBadRequest) WithPayload(payload *v1.Error) *AddOrganizationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add organization bad request response
func (o *AddOrganizationBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrganizationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrganizationConflictCode is the HTTP code returned for type AddOrganizationConflict
const AddOrganizationConflictCode int = 409

/*AddOrganizationConflict Already Exists

swagger:response addOrganizationConflict
*/
type AddOrganizationConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddOrganizationConflict creates AddOrganizationConflict with default headers values
func NewAddOrganizationConflict() *AddOrganizationConflict {

	return &AddOrganizationConflict{}
}

// WithPayload adds the payload to the add organization conflict response
func (o *AddOrganizationConflict) WithPayload(payload *v1.Error) *AddOrganizationConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add organization conflict response
func (o *AddOrganizationConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrganizationConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddOrganizationInternalServerErrorCode is the HTTP code returned for type AddOrganizationInternalServerError
const AddOrganizationInternalServerErrorCode int = 500

/*AddOrganizationInternalServerError Internal Error

swagger:response addOrganizationInternalServerError
*/
type AddOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddOrganizationInternalServerError creates AddOrganizationInternalServerError with default headers values
func NewAddOrganizationInternalServerError() *AddOrganizationInternalServerError {

	return &AddOrganizationInternalServerError{}
}

// WithPayload adds the payload to the add organization internal server error response
func (o *AddOrganizationInternalServerError) WithPayload(payload *v1.Error) *AddOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add organization internal server error response
func (o *AddOrganizationInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddOrganizationDefault Generic error response

swagger:response addOrganizationDefault
*/
type AddOrganizationDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddOrganizationDefault creates AddOrganizationDefault with default headers values
func NewAddOrganizationDefault(code int) *AddOrganizationDefault {
	if code <= 0 {
		code = 500
	}

	return &AddOrganizationDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add organization default response
func (o *AddOrganizationDefault) WithStatusCode(code int) *AddOrganizationDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add organization default response
func (o *AddOrganizationDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add organization default response
func (o *AddOrganizationDefault) WithPayload(payload *v1.Error) *AddOrganizationDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add organization default response
func (o *AddOrganizationDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddOrganizationDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
