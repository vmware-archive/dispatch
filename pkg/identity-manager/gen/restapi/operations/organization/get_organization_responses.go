///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetOrganizationOKCode is the HTTP code returned for type GetOrganizationOK
const GetOrganizationOKCode int = 200

/*GetOrganizationOK Successful operation

swagger:response getOrganizationOK
*/
type GetOrganizationOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Organization `json:"body,omitempty"`
}

// NewGetOrganizationOK creates GetOrganizationOK with default headers values
func NewGetOrganizationOK() *GetOrganizationOK {

	return &GetOrganizationOK{}
}

// WithPayload adds the payload to the get organization o k response
func (o *GetOrganizationOK) WithPayload(payload *v1.Organization) *GetOrganizationOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization o k response
func (o *GetOrganizationOK) SetPayload(payload *v1.Organization) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationBadRequestCode is the HTTP code returned for type GetOrganizationBadRequest
const GetOrganizationBadRequestCode int = 400

/*GetOrganizationBadRequest Invalid Name supplied

swagger:response getOrganizationBadRequest
*/
type GetOrganizationBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetOrganizationBadRequest creates GetOrganizationBadRequest with default headers values
func NewGetOrganizationBadRequest() *GetOrganizationBadRequest {

	return &GetOrganizationBadRequest{}
}

// WithPayload adds the payload to the get organization bad request response
func (o *GetOrganizationBadRequest) WithPayload(payload *v1.Error) *GetOrganizationBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization bad request response
func (o *GetOrganizationBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationNotFoundCode is the HTTP code returned for type GetOrganizationNotFound
const GetOrganizationNotFoundCode int = 404

/*GetOrganizationNotFound Organization not found

swagger:response getOrganizationNotFound
*/
type GetOrganizationNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetOrganizationNotFound creates GetOrganizationNotFound with default headers values
func NewGetOrganizationNotFound() *GetOrganizationNotFound {

	return &GetOrganizationNotFound{}
}

// WithPayload adds the payload to the get organization not found response
func (o *GetOrganizationNotFound) WithPayload(payload *v1.Error) *GetOrganizationNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization not found response
func (o *GetOrganizationNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetOrganizationInternalServerErrorCode is the HTTP code returned for type GetOrganizationInternalServerError
const GetOrganizationInternalServerErrorCode int = 500

/*GetOrganizationInternalServerError Internal error

swagger:response getOrganizationInternalServerError
*/
type GetOrganizationInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetOrganizationInternalServerError creates GetOrganizationInternalServerError with default headers values
func NewGetOrganizationInternalServerError() *GetOrganizationInternalServerError {

	return &GetOrganizationInternalServerError{}
}

// WithPayload adds the payload to the get organization internal server error response
func (o *GetOrganizationInternalServerError) WithPayload(payload *v1.Error) *GetOrganizationInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get organization internal server error response
func (o *GetOrganizationInternalServerError) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetOrganizationInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
