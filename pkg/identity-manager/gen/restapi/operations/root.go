///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// RootHandlerFunc turns a function with the right signature into a root handler
type RootHandlerFunc func(RootParams) middleware.Responder

// Handle executing the request and returning a response
func (fn RootHandlerFunc) Handle(params RootParams) middleware.Responder {
	return fn(params)
}

// RootHandler interface for that can handle valid root params
type RootHandler interface {
	Handle(RootParams) middleware.Responder
}

// NewRoot creates a new http.Handler for the root operation
func NewRoot(ctx *middleware.Context, handler RootHandler) *Root {
	return &Root{Context: ctx, Handler: handler}
}

/*Root swagger:route GET / root

an placehold root page, no authentication is required at this point

*/
type Root struct {
	Context *middleware.Context
	Handler RootHandler
}

func (o *Root) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewRootParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
