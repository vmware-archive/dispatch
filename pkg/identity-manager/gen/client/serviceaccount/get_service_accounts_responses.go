///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package serviceaccount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vmware/dispatch/pkg/identity-manager/gen/models"
)

// GetServiceAccountsReader is a Reader for the GetServiceAccounts structure.
type GetServiceAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServiceAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetServiceAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetServiceAccountsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServiceAccountsOK creates a GetServiceAccountsOK with default headers values
func NewGetServiceAccountsOK() *GetServiceAccountsOK {
	return &GetServiceAccountsOK{}
}

/*GetServiceAccountsOK handles this case with default header values.

Successful operation
*/
type GetServiceAccountsOK struct {
	Payload []*models.ServiceAccount
}

func (o *GetServiceAccountsOK) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount][%d] getServiceAccountsOK  %+v", 200, o.Payload)
}

func (o *GetServiceAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountsInternalServerError creates a GetServiceAccountsInternalServerError with default headers values
func NewGetServiceAccountsInternalServerError() *GetServiceAccountsInternalServerError {
	return &GetServiceAccountsInternalServerError{}
}

/*GetServiceAccountsInternalServerError handles this case with default header values.

Internal Error
*/
type GetServiceAccountsInternalServerError struct {
	Payload *models.Error
}

func (o *GetServiceAccountsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount][%d] getServiceAccountsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetServiceAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountsDefault creates a GetServiceAccountsDefault with default headers values
func NewGetServiceAccountsDefault(code int) *GetServiceAccountsDefault {
	return &GetServiceAccountsDefault{
		_statusCode: code,
	}
}

/*GetServiceAccountsDefault handles this case with default header values.

Unexpected Error
*/
type GetServiceAccountsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get service accounts default response
func (o *GetServiceAccountsDefault) Code() int {
	return o._statusCode
}

func (o *GetServiceAccountsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount][%d] getServiceAccounts default  %+v", o._statusCode, o.Payload)
}

func (o *GetServiceAccountsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
