///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package organization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// NewUpdateOrganizationParams creates a new UpdateOrganizationParams object
// with the default values initialized.
func NewUpdateOrganizationParams() *UpdateOrganizationParams {
	var ()
	return &UpdateOrganizationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateOrganizationParamsWithTimeout creates a new UpdateOrganizationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateOrganizationParamsWithTimeout(timeout time.Duration) *UpdateOrganizationParams {
	var ()
	return &UpdateOrganizationParams{

		timeout: timeout,
	}
}

// NewUpdateOrganizationParamsWithContext creates a new UpdateOrganizationParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateOrganizationParamsWithContext(ctx context.Context) *UpdateOrganizationParams {
	var ()
	return &UpdateOrganizationParams{

		Context: ctx,
	}
}

// NewUpdateOrganizationParamsWithHTTPClient creates a new UpdateOrganizationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateOrganizationParamsWithHTTPClient(client *http.Client) *UpdateOrganizationParams {
	var ()
	return &UpdateOrganizationParams{
		HTTPClient: client,
	}
}

/*UpdateOrganizationParams contains all the parameters to send to the API endpoint
for the update organization operation typically these are written to a http.Request
*/
type UpdateOrganizationParams struct {

	/*Body
	  Organization object

	*/
	Body *v1.Organization
	/*OrganizationName
	  Name of Organization to work on

	*/
	OrganizationName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update organization params
func (o *UpdateOrganizationParams) WithTimeout(timeout time.Duration) *UpdateOrganizationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update organization params
func (o *UpdateOrganizationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update organization params
func (o *UpdateOrganizationParams) WithContext(ctx context.Context) *UpdateOrganizationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update organization params
func (o *UpdateOrganizationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update organization params
func (o *UpdateOrganizationParams) WithHTTPClient(client *http.Client) *UpdateOrganizationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update organization params
func (o *UpdateOrganizationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update organization params
func (o *UpdateOrganizationParams) WithBody(body *v1.Organization) *UpdateOrganizationParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update organization params
func (o *UpdateOrganizationParams) SetBody(body *v1.Organization) {
	o.Body = body
}

// WithOrganizationName adds the organizationName to the update organization params
func (o *UpdateOrganizationParams) WithOrganizationName(organizationName string) *UpdateOrganizationParams {
	o.SetOrganizationName(organizationName)
	return o
}

// SetOrganizationName adds the organizationName to the update organization params
func (o *UpdateOrganizationParams) SetOrganizationName(organizationName string) {
	o.OrganizationName = organizationName
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateOrganizationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param organizationName
	if err := r.SetPathParam("organizationName", o.OrganizationName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
