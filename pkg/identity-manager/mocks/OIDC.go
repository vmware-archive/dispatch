// Code generated by mockery v1.0.0
package mocks

import mock "github.com/stretchr/testify/mock"
import oidc "github.com/coreos/go-oidc"

// OIDC is an autogenerated mock type for the OIDC type
type OIDC struct {
	mock.Mock
}

// ExchangeIDToken provides a mock function with given fields: _a0
func (_m *OIDC) ExchangeIDToken(_a0 string) (*oidc.IDToken, error) {
	ret := _m.Called(_a0)

	var r0 *oidc.IDToken
	if rf, ok := ret.Get(0).(func(string) *oidc.IDToken); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oidc.IDToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ExchangeIDTokenWithPassword provides a mock function with given fields: _a0, _a1
func (_m *OIDC) ExchangeIDTokenWithPassword(_a0 string, _a1 string) (*oidc.IDToken, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *oidc.IDToken
	if rf, ok := ret.Get(0).(func(string, string) *oidc.IDToken); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*oidc.IDToken)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetAuthEndpoint provides a mock function with given fields: _a0
func (_m *OIDC) GetAuthEndpoint(_a0 string) string {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
