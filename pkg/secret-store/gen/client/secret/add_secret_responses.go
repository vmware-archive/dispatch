///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/secret-store/gen/models"
)

// AddSecretReader is a Reader for the AddSecret structure.
type AddSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewAddSecretCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewAddSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewAddSecretDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddSecretCreated creates a AddSecretCreated with default headers values
func NewAddSecretCreated() *AddSecretCreated {
	return &AddSecretCreated{}
}

/*AddSecretCreated handles this case with default header values.

The created secret.
*/
type AddSecretCreated struct {
	Payload *models.Secret
}

func (o *AddSecretCreated) Error() string {
	return fmt.Sprintf("[POST /][%d] addSecretCreated  %+v", 201, o.Payload)
}

func (o *AddSecretCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Secret)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSecretBadRequest creates a AddSecretBadRequest with default headers values
func NewAddSecretBadRequest() *AddSecretBadRequest {
	return &AddSecretBadRequest{}
}

/*AddSecretBadRequest handles this case with default header values.

Bad Request
*/
type AddSecretBadRequest struct {
	Payload *models.Error
}

func (o *AddSecretBadRequest) Error() string {
	return fmt.Sprintf("[POST /][%d] addSecretBadRequest  %+v", 400, o.Payload)
}

func (o *AddSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSecretDefault creates a AddSecretDefault with default headers values
func NewAddSecretDefault(code int) *AddSecretDefault {
	return &AddSecretDefault{
		_statusCode: code,
	}
}

/*AddSecretDefault handles this case with default header values.

Standard error
*/
type AddSecretDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the add secret default response
func (o *AddSecretDefault) Code() int {
	return o._statusCode
}

func (o *AddSecretDefault) Error() string {
	return fmt.Sprintf("[POST /][%d] addSecret default  %+v", o._statusCode, o.Payload)
}

func (o *AddSecretDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
