///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/secret-store/gen/models"
)

// DeleteSecretReader is a Reader for the DeleteSecret structure.
type DeleteSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSecretNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteSecretDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteSecretNoContent creates a DeleteSecretNoContent with default headers values
func NewDeleteSecretNoContent() *DeleteSecretNoContent {
	return &DeleteSecretNoContent{}
}

/*DeleteSecretNoContent handles this case with default header values.

Successful deletion
*/
type DeleteSecretNoContent struct {
}

func (o *DeleteSecretNoContent) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecretNoContent ", 204)
}

func (o *DeleteSecretNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretBadRequest creates a DeleteSecretBadRequest with default headers values
func NewDeleteSecretBadRequest() *DeleteSecretBadRequest {
	return &DeleteSecretBadRequest{}
}

/*DeleteSecretBadRequest handles this case with default header values.

Bad Request
*/
type DeleteSecretBadRequest struct {
	Payload *models.Error
}

func (o *DeleteSecretBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecretBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretNotFound creates a DeleteSecretNotFound with default headers values
func NewDeleteSecretNotFound() *DeleteSecretNotFound {
	return &DeleteSecretNotFound{}
}

/*DeleteSecretNotFound handles this case with default header values.

Resource Not Found if no secret exists with the given name
*/
type DeleteSecretNotFound struct {
	Payload *models.Error
}

func (o *DeleteSecretNotFound) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecretNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSecretDefault creates a DeleteSecretDefault with default headers values
func NewDeleteSecretDefault(code int) *DeleteSecretDefault {
	return &DeleteSecretDefault{
		_statusCode: code,
	}
}

/*DeleteSecretDefault handles this case with default header values.

generic error
*/
type DeleteSecretDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete secret default response
func (o *DeleteSecretDefault) Code() int {
	return o._statusCode
}

func (o *DeleteSecretDefault) Error() string {
	return fmt.Sprintf("[DELETE /{secretName}][%d] deleteSecret default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteSecretDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
