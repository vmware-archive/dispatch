///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/api-manager/gen/models"
)

// DeleteAPIReader is a Reader for the DeleteAPI structure.
type DeleteAPIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAPIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteAPIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteAPIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteAPINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteAPIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteAPIOK creates a DeleteAPIOK with default headers values
func NewDeleteAPIOK() *DeleteAPIOK {
	return &DeleteAPIOK{}
}

/*DeleteAPIOK handles this case with default header values.

Successful operation
*/
type DeleteAPIOK struct {
	Payload *models.API
}

func (o *DeleteAPIOK) Error() string {
	return fmt.Sprintf("[DELETE /{api}][%d] deleteApiOK  %+v", 200, o.Payload)
}

func (o *DeleteAPIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.API)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIBadRequest creates a DeleteAPIBadRequest with default headers values
func NewDeleteAPIBadRequest() *DeleteAPIBadRequest {
	return &DeleteAPIBadRequest{}
}

/*DeleteAPIBadRequest handles this case with default header values.

Invalid Name supplied
*/
type DeleteAPIBadRequest struct {
	Payload *models.Error
}

func (o *DeleteAPIBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /{api}][%d] deleteApiBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAPIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPINotFound creates a DeleteAPINotFound with default headers values
func NewDeleteAPINotFound() *DeleteAPINotFound {
	return &DeleteAPINotFound{}
}

/*DeleteAPINotFound handles this case with default header values.

API not found
*/
type DeleteAPINotFound struct {
	Payload *models.Error
}

func (o *DeleteAPINotFound) Error() string {
	return fmt.Sprintf("[DELETE /{api}][%d] deleteApiNotFound  %+v", 404, o.Payload)
}

func (o *DeleteAPINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAPIInternalServerError creates a DeleteAPIInternalServerError with default headers values
func NewDeleteAPIInternalServerError() *DeleteAPIInternalServerError {
	return &DeleteAPIInternalServerError{}
}

/*DeleteAPIInternalServerError handles this case with default header values.

Internal error
*/
type DeleteAPIInternalServerError struct {
	Payload *models.Error
}

func (o *DeleteAPIInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /{api}][%d] deleteApiInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAPIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
