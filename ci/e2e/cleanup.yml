---
platform: linux

image_resource:
  type: docker-image
  source:
    repository: vmware/dispatch-k8s-ci
    tag: v0.0.11

# dispatch must be dispatch git repo.
inputs:
- name: dispatch
- name: cluster

params:
  GKE_KEY:
  GKE_PROJECT_ID:
  MAX_ATTEMPTS: 18
  TIMEOUT: 10

run:
  path: /bin/bash
  args:
  - -c
  - |
    set -e -x -u
    source dispatch/ci/e2e/config-k8s-env.sh

    set +x
    if [[ -n ${GKE_PROJECT_ID} ]]; then
      # Delete load balancers
      while read -r line; do
          namespace=$(echo $line | awk '{print $1;}')
          svc_name=$(echo $line | awk '{print $2;}')
          attempts=0
          
          kubectl delete -n ${namespace} svc ${svc_name}

          # Wait until LB is deleted asynchronously before deleting cluster (Workaround for https://github.com/kubernetes/kubernetes/issues/51701)
          until (kubectl get -n ${namespace} events | grep ${svc_name} | grep -q DeletedLoadBalancer); do
              sleep ${TIMEOUT}
              ((attempts++))

              # Prevent possible infinite loop
              if [[ ${attempts} -ge ${MAX_ATTEMPTS} ]]; then
                  break
              fi
          done 
      done <<< $(kubectl get svc --all-namespaces | grep LoadBalancer)

      # Persistant storage info
      export PERSISTANT_STORAGE=$(kubectl -n dispatch get pv -o json | jq -r '.items[0].spec.gcePersistentDisk.pdName')

      # Delete cluster
      gcloud container clusters delete --quiet $(cat cluster/name)

      # Delete persistent storage
      gcloud compute disks delete --quiet ${PERSISTANT_STORAGE}
    else
      helm delete --purge dispatch api-gateway openfaas ingress || true
      kubectl delete namespace kong dispatch openfaas || true
    fi
    set -x
