#!/bin/bash

function print_usage() {
cat <<EOF

topics is a tool for listing and tailing the topics on the Kafka broker

Commands:
  describe     describe a topic
  list         list all topics
  tail         tail a topic

  Use "topics <command> --help" for more information about a given command.

EOF
}

function print_describe_usage() {
cat <<EOF

Describe a Topic

Usage:

  topics describe -n <topic>

EOF
}

function print_list_usage() {
cat <<EOF

List all Topics

Usage:

  topics list

  Options:

    -n, --name: name of the Topic to describe (default is "replies")

EOF
}

function print_tail_usage() {
cat <<EOF

Tail a Topic

Usage:

  topics tail -n <topic>

Options:

  -n, --name: name of the Topic to tail (default is "replies")

EOF
}

function describe() {
  echo "Describing Topic: $TOPIC"
  kubectl exec -n riff-system $POD -- /opt/kafka/bin/kafka-topics.sh --describe --topic $TOPIC --zookeeper $ZK:2181
}

function list() {
  echo "Listing all Topics"
  kubectl exec -n riff-system $POD -- /opt/kafka/bin/kafka-topics.sh --list --zookeeper $ZK:2181
}

function tail() {
  echo "Tailing Topic: $TOPIC"
  kubectl exec -n riff-system $POD -- /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic $TOPIC --from-beginning
}

# ======================================= TOPICS END =======================================

if [[ $1 == "--help" || $1 == "-h" ]] ; then
    print_usage
    exit 0
fi

if [[ $# == 0 ]]; then
  print_usage
  exit 0
fi

POD=$(kubectl get -n riff-system pod -l component=kafka-broker -o jsonpath='{.items[0].metadata.name}')
ZK=$(kubectl get -n riff-system service -l component=zookeeper -o jsonpath='{.items[0].metadata.name}')

COMMAND="$1"
shift

if [[ $1 == "--help" || $1 == "-h" ]] ; then
  if [[ "${COMMAND}" == "describe" ]]; then
    print_describe_usage
    exit 0
  elif [[ "${COMMAND}" == "list" ]]; then
    print_list_usage
    exit 0
  elif [[ "${COMMAND}" == "tail" ]]; then
    print_tail_usage
    exit 0
  fi
fi

while [[ $# > 0 ]]
do
key="$1"
case ${key} in
  -n|--name)
  TOPIC="$2"
  shift
  ;;
  --help)
  print_usage
  exit 0
  ;;
  *)
  echo ""
  echo "ERROR: Invalid option: [$1]"
  print_usage
  exit 1
  ;;
esac
shift
done

# ======================================= DEFAULTS ============================================
TOPIC="${TOPIC:-function-replicas}"

# ======================================= DEFAULTS END ========================================
if [[ "${COMMAND}" == "describe" ]]; then
  describe
elif [[ "${COMMAND}" == "list" ]]; then
  list
elif [[ "${COMMAND}" == "tail" ]]; then
  tail
else
  echo "$COMMAND is an invalid command"
  exit 1;
fi
