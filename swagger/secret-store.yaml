swagger: "2.0"
info:
  description: VMware Dispatch Secret Store
  title: Secret Store
  version: 0.0.1
consumes:
- application/json
produces:
- application/json
schemes:
#- https
- http
tags:
- name: secret
  description: Operations on secrets
basePath: /v1/secret
paths:
  /:
    get:
      tags:
      - secret
      operationId: getSecrets
      parameters:
      - in: query
        type: array
        name: tags
        description: Filter based on tags
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: An array of registered secrets
          schema:
            type: array
            items:
              $ref: "#/definitions/Secret"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Standard error
          schema:
            $ref: "#/definitions/Error"
    post:
      tags:
        - secret
      operationId: addSecret
      consumes:
        - application/json
      parameters:
        - in: body
          name: secret
          schema:
            $ref: "#/definitions/Secret"
      responses:
        201:
          description: The created secret.
          schema:
            $ref: "#/definitions/Secret"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Already Exists
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Standard error
          schema:
            $ref: "#/definitions/Error"
  /{secretName}:
    parameters:
    - in: path
      name: secretName
      description: name of the secret to operate on
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    - in: query
      type: array
      name: tags
      description: Filter based on tags
      items:
        type: string
      collectionFormat: 'multi'
    get:
      operationId: getSecret
      tags:
        - secret
      produces:
        - application/json
      responses:
        200:
          description: The secret identified by the secretName
          schema:
            $ref: "#/definitions/Secret"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource Not Found if no secret exists with the given name
          schema:
            $ref: "#/definitions/Error"
        default:
          description: Standard error
          schema:
            $ref: "#/definitions/Error"
    put:
      operationId: updateSecret
      tags:
        - secret
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: secret
          schema:
            $ref: "#/definitions/Secret"
        - in: path
          name: secretName
          type: string
          pattern: '^[\w\d\-]+$'
          required: true
      responses:
        201:
          description: The updated secret
          schema:
            $ref: "#/definitions/Secret"
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource Not Found if no secret exists with the given name
          schema:
            $ref: "#/definitions/Error"
        default:
          description: generic error
          schema:
            $ref: "#/definitions/Error"
    delete:
      operationId: deleteSecret
      tags:
        - secret
      parameters:
        - in: path
          name: secretName
          type: string
          pattern: '^[\w\d\-]+$'
          required: true
      responses:
        204:
          description: Successful deletion
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Resource Not Found if no secret exists with the given name
          schema:
            $ref: "#/definitions/Error"
        default:
          description: generic error
          schema:
            $ref: "#/definitions/Error"
security:
  - cookie: []
  - bearer: []
securityDefinitions:
  cookie:
    type: apiKey
    description: use cookies for authentication, when the user already logged in
    in: header
    name: Cookie
  bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Tag:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Secret:
    type: object
    required:
      - name
    properties:
      id:
        type: string
        format: uuid
        readOnly: true
      name:
       type: string
       pattern: '^[\w\d\-]+$'
      kind:
        type: string
        pattern: '^[\w\d\-]+$'
        readOnly: true
      secrets:
       $ref: "#/definitions/SecretValue"
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'

  SecretValue:
    type: object
    additionalProperties:
      type: string

  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
