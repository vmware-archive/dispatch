swagger: '2.0'
info:
  description: |
    VMware Dispatch Service Manager
  version: 1.0.0
  title: Service Manager
  contact:
    email: dispatch@vmware.com
tags:
- name: serviceClass
  description: Operations on service classes
- name: serviceInstance
  description: Operations on service instances
schemes:
- http
- https
basePath: /v1
paths:
  /serviceclass:
    get:
      tags:
      - serviceClass
      summary: List all existing service classes
      operationId: getServiceClasses
      produces:
      - application/json
      parameters:
      - in: query
        name: broker
        description: Broker name
        type: string
      - in: query
        name: tags
        description: Filter on service class tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceClass'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /serviceclass/{serviceClassName}:
    parameters:
    - in: path
      name: serviceClassName
      description: Name of service class to return
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    get:
      tags:
      - serviceClass
      summary: Find service class by name
      description: Returns a single service class
      operationId: getServiceClassByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ServiceClass'
        400:
          description: Invalid name supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Service class not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /serviceinstance:
    get:
      tags:
      - serviceInstance
      summary: Get all service instances
      description: List all service instances
      operationId: getServiceInstances
      produces:
      - application/json
      parameters:
      - in: query
        name: serviceclass
        description: service class name
        type: string
      - in: query
        name: tags
        description: Filter on service instance tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceInstance'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
      - serviceInstance
      summary: Add a new service instance
      operationId: addServiceInstance
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Service instance object
        required: true
        schema:
          $ref: '#/definitions/ServiceInstance'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/ServiceInstance'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        409:
          description: Already Exists
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /serviceinstance/{serviceInstanceName}:
    parameters:
    - in: path
      name: serviceInstanceName
      description: Name of service instance to return
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    get:
      tags:
      - serviceInstance
      summary: Find service instance by name
      description: Returns a single service instance
      operationId: getServiceInstanceByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ServiceInstance'
        400:
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Service instance not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - serviceInstance
      summary: Deletes a service instance
      operationId: deleteServiceInstanceByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ServiceInstance'
        400:
          description: Invalid name supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Service instance not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
security:
  - cookie: []
  - bearer: []
securityDefinitions:
  cookie:
    type: apiKey
    description: use cookies for authentication, when the user already logged in
    in: header
    name: Cookie
  bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Tag:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Status:
    type: string
    enum:
    - INITIALIZED
    - CREATING
    - READY
    - ERROR
    - DELETED
  ServiceClass:
    type: object
    required:
    - name
    - broker
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      kind:
        type: string
        pattern: '^[\w\d\-]+$'
        readOnly: true
      description:
        type: string
      broker:
        type: string
      bindable:
        type: boolean
      plans:
        type: array
        items:
          $ref: '#/definitions/ServicePlan'
      status:
        $ref: '#/definitions/Status'
      reason:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: integer
  ServicePlan:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      kind:
        type: string
        pattern: '^[\w\d\-]+$'
        readOnly: true
      description:
        type: string
      bindable:
        type: boolean
      metadata:
        type: object
      free:
        type: boolean
      schema:
        $ref: '#/definitions/ServicePlanSchema'
  ServicePlanSchema:
    type: object
    properties:
      create:
        type: object
      update:
        type: object
      bind:
        type: object
  ServiceInstance:
    type: object
    required:
    - name
    - serviceClass
    - servicePlan
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      kind:
        type: string
        pattern: '^[\w\d\-]+$'
        readOnly: true
      serviceClass:
        type: string
        pattern: '^[\w\d\-]+$'
      servicePlan:
        type: string
        pattern: '^[\w\d\-]+$'
      parameters:
        type: object
      secretParameters:
        type: array
        items:
          type: string
      binding:
        $ref: '#/definitions/ServiceBinding'
      status:
        $ref: '#/definitions/Status'
      reason:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: integer
  ServiceBinding:
    type: object
    properties:
      status:
        $ref: '#/definitions/Status'
      reason:
        type: array
        items:
          type: string
      createdTime:
        type: integer
      parameters:
        type: object
      secretParameters:
        type: array
        items:
          type: string
      bindingSecret:
        type: string