swagger: '2.0'
info:
  description: |
    VMware Dispatch Identity Manager
  title: Identity Manager
  contact:
    email: dispatch@vmware.com
  version: 1.0.0
tags:
- name: authentication
schemes:
- http
- https
consumes:
- application/json
produces:
- application/json

basePath: /
paths:
  /:
    get:
      summary: an placehold root page, no authentication is required at this point
      operationId: root
      responses:
        200:
          description: home page
          schema:
            $ref: "#/definitions/Message"
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
  /v1/iam/home:
    get:
      security:
        - cookie: []
      summary: an placehold home page
      operationId: home
      responses:
        200:
          description: home page
          schema:
            $ref: "#/definitions/Message"
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
  /v1/iam/auth:
    get:
      security:
        - cookie: []
      summary: handles authentication
      operationId: auth
      responses:
        202:
          description: default response if authenticated
          schema:
            $ref: "#/definitions/Message"
        401:
          description: Unauthorized
        403:
          description: Forbidden
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
  /v1/iam/policy:
    post:
      security:
        - cookie: []
      tags:
      - policy
      summary: Add a new policy
      operationId: addPolicy
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Policy Object
        required: true
        schema:
          $ref: '#/definitions/Policy'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/Policy'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    get:
      security:
        - cookie: []
      tags:
      - policy
      summary: List all existing policies
      operationId: getPolicies
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Policy'
        500:
          description: Internal Error
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/Error'
  /v1/iam/policy/{policyName}:
    parameters:
    - in: path
      name: policyName
      description: Name of Policy to work on
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    get:
      security:
        - cookie: []
      tags:
      - policy
      summary: Find Policy by name
      description: get an Policy by name
      operationId: getPolicy
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Policy'
        400:
          description: Invalid Name supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/Error'
    put:
      security:
        - cookie: []
      tags:
      - policy
      summary: Update a Policy
      operationId: updatePolicy
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Policy object
        required: true
        schema:
          $ref: '#/definitions/Policy'
      responses:
        200:
          description: Successful update
          schema:
            $ref: '#/definitions/Policy'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/Error'
    delete:
      security:
        - cookie: []
      tags:
      - policy
      summary: Deletes an Policy
      operationId: deletePolicy
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: '#/definitions/Policy'
        400:
          description: Invalid Name supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Policy not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: '#/definitions/Error'
  /v1/iam/redirect:
    get:
      security:
        - cookie: []
      summary: redirect to localhost for vs-cli login (testing)
      operationId: redirect
      parameters:
      - in: query
        name: redirect
        description: the local server url redirecting to
        type: string
      responses:
        302:
          description: redirect
          headers:
            Location:
              description: redirect location
              type: string
        default:
          description: error
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  cookie:
    type: apiKey
    description: use cookies for authentication, when the user already logged in
    in: header
    name: Cookie
definitions:
  Redirect:
    type: object
    required:
      - location
    properties:
      location:
        type: string
  Status:
    type: string
    enum:
    - CREATING
    - READY
    - UPDATING
    - DELETED
    - ERROR
  Rule:
    type: object
    required:
    - subjects
    - resources
    - actions
    properties:
      subjects:
        type: array
        items:
          type: string
          pattern: '^[\w\d\-]+$'
      resources:
        type: array
        items:
          type: string
          pattern: '^[\w\d\-]+$'
      actions:
        type: array
        items:
          type: string
          pattern: '^[\w\d\-]+$'
  Policy:
    type: object
    required:
    - name
    - rules
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      rules:
        type: array
        items:
          $ref: '#/definitions/Rule'
      createdTime:
        type: integer
        readOnly: true
      modifiedTime:
        type: integer
        readOnly: true
      status:
        $ref: '#/definitions/Status'
        readOnly: true
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Message:
    type: object
    required:
      - message
    properties:
      message:
        type: string