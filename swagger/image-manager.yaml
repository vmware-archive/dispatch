swagger: '2.0'
info:
  description: |
    VMware Dispatch Image Manager
  version: 1.0.0
  title: Image Manager
  contact:
    email: dispatch@vmware.com
tags:
- name: baseImage
  description: Operations on base-images
- name: image
  description: Operations on images
- name: systemPackage
  description: Operations on system packages
- name: runtimePackage
  description: Operations on runtime packages
schemes:
- http
- https
basePath: /v1/image
paths:
  /base:
    post:
      tags:
      - baseImage
      summary: Add a new base image
      operationId: addBaseImage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Base image object
        required: true
        schema:
          $ref: '#/definitions/BaseImage'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
      - baseImage
      summary: List all existing base images
      operationId: getBaseImages
      produces:
      - application/json
      parameters:
      - in: query
        name: runtime
        description: Base image runtime/language
        type: string
      - in: query
        name: tags
        description: Filter on base image tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BaseImage'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /base/{baseImageName}:
    parameters:
    - in: path
      name: baseImageName
      description: Name of base image to return
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    - in: query
      type: array
      name: tags
      description: Filter based on tags
      items:
        type: string
      collectionFormat: 'multi'
    get:
      tags:
      - baseImage
      summary: Find base image by Name
      description: Returns a single base image
      operationId: getBaseImageByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Base image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - baseImage
      summary: Updates a base image
      operationId: updateBaseImageByName
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/BaseImage'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - baseImage
      summary: Deletes a base image
      operationId: deleteBaseImageByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Base image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /:
    get:
      tags:
      - image
      summary: Get all images
      description: List all images
      operationId: getImages
      produces:
      - application/json
      parameters:
      - in: query
        name: language
        description: image runtime language
        type: string
      - in: query
        name: tags
        description: Filter on image tags
        type: array
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Image'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
      - image
      summary: Add a new image
      operationId: addImage
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: Image object
        required: true
        schema:
          $ref: '#/definitions/Image'
      responses:
        201:
          description: created
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
  /{imageName}:
    parameters:
    - in: path
      name: imageName
      description: Name of image to return
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    - in: query
      name: tags
      description: Filter on image tags
      type: array
      items:
        type: string
      collectionFormat: 'multi'
    get:
      tags:
      - image
      summary: Find image by ID
      description: Returns a single image
      operationId: getImageByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
      - image
      summary: Updates an image
      operationId: updateImageByName
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        schema:
          $ref: '#/definitions/Image'
      responses:
        200:
          description: updated
          schema:
            $ref: '#/definitions/BaseImage'
        400:
          description: Invalid input
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
      - image
      summary: Deletes an image
      operationId: deleteImageByName
      produces:
      - application/json
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Image'
        400:
          description: Invalid ID supplied
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Image not found
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Generic error response
          schema:
            $ref: '#/definitions/Error'
security:
  - cookie: []
securityDefinitions:
  cookie:
    type: apiKey
    description: use cookies for authentication, when the user already logged in
    in: header
    name: Cookie
definitions:
  Error:
    type: object
    required:
      - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Tag:
    type: object
    properties:
      key:
        type: string
      value:
        type: string
  Language:
    type: string
    enum:
    - python2
    - python3
    - nodejs6
    - powershell
  Spec:
    type: string
    enum:
    - CONFIGURE
    - CREATE
    - DELETE
  Status:
    type: string
    enum:
    - INITIALIZED
    - CREATING
    - READY
    - ERROR
    - DELETED
  BaseImage:
    type: object
    required:
    - name
    - dockerUrl
    - language
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      dockerUrl:
        type: string
      language:
        $ref: '#/definitions/Language'
      public:
        type: boolean
        default: false
      spec:
        $ref: '#/definitions/Spec'
      status:
        $ref: '#/definitions/Status'
      reason:
        type: array
        items:
          type: string
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: integer
  Image:
    type: object
    required:
    - name
    - baseImageName
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
        pattern: '^[\w\d\-]+$'
      baseImageName:
        type: string
        pattern: '^[\w\d\-]+$'
      dockerUrl:
        type: string
      language:
        $ref: '#/definitions/Language'
      spec:
        $ref: '#/definitions/Spec'
      status:
        $ref: '#/definitions/Status'
      reason:
        type: array
        items:
          type: string
      groups:
        type: array
        items:
          type: string
      tags:
        type: array
        items:
          $ref: '#/definitions/Tag'
      createdTime:
        type: integer
