swagger: '2.0'
info:
  description: |
    VMware Dispatch - API Manager APIs
  version: 1.0.0
  title: API Manager
  contact:
    email: dispatch@vmware.com
tags:
- name: endpoint
  description: CRUD operations on APIs
schemes:
- http
- https
parameters:
  orgIDParam:
    in: header
    name: X-Dispatch-Org
    type: string
    required: true
basePath: /v1/api
paths:
  /:
    parameters:
      - $ref: '#/parameters/orgIDParam'
    post:
      tags:
      - endpoint
      summary: Add a new API
      operationId: addAPI
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: API object
        required: true
        schema:
          $ref: './models.json#/definitions/API'
      responses:
        200:
          description: API created
          schema:
            $ref: './models.json#/definitions/API'
        400:
          description: Invalid Input
          schema:
            $ref: './models.json#/definitions/Error'
        401:
          description: Unauthorized Request
          schema:
            $ref: './models.json#/definitions/Error'
        409:
          description: Already Exists
          schema:
            $ref: './models.json#/definitions/Error'
        500:
          description: Internal Error
          schema:
            $ref: './models.json#/definitions/Error'
    get:
      tags:
      - endpoint
      summary: List all existing APIs
      operationId: getAPIs
      produces:
      - application/json
      parameters:
      # TODO: more parameters?
      - in: query
        type: string
        name: function
        description: Filter based on function names
      - in: query
        type: array
        name: tags
        description: Filter based on tags
        items:
          type: string
        collectionFormat: 'multi'
      responses:
        200:
          description: Successful operation
          schema:
            type: array
            items:
              $ref: './models.json#/definitions/API'
        500:
          description: Internal Error
          schema:
            $ref: './models.json#/definitions/Error'
        default:
          description: Unexpected Error
          schema:
            $ref: './models.json#/definitions/Error'
  /{api}:
    parameters:
    - $ref: '#/parameters/orgIDParam'
    - in: path
      name: api
      description: Name of API to work on
      required: true
      type: string
      pattern: '^[\w\d\-]+$'
    - in: query
      type: array
      name: tags
      description: Filter based on tags
      items:
        type: string
      collectionFormat: 'multi'
    get:
      tags:
      - endpoint
      summary: Find API by name
      description: get an API by name
      operationId: getAPI
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: './models.json#/definitions/API'
        400:
          description: Invalid Name supplied
          schema:
            $ref: './models.json#/definitions/Error'
        404:
          description: API not found
          schema:
            $ref: './models.json#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: './models.json#/definitions/Error'
    put:
      tags:
      - endpoint
      summary: Update an API
      operationId: updateAPI
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        description: API object
        required: true
        schema:
          $ref: './models.json#/definitions/API'
      responses:
        200:
          description: Successful update
          schema:
            $ref: './models.json#/definitions/API'
        400:
          description: Invalid input
          schema:
            $ref: './models.json#/definitions/Error'
        404:
          description: API not found
          schema:
            $ref: './models.json#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: './models.json#/definitions/Error'
    delete:
      tags:
      - endpoint
      summary: Deletes an API
      operationId: deleteAPI
      produces:
      - application/json
      responses:
        200:
          description: Successful operation
          schema:
            $ref: './models.json#/definitions/API'
        400:
          description: Invalid Name supplied
          schema:
            $ref: './models.json#/definitions/Error'
        404:
          description: API not found
          schema:
            $ref: './models.json#/definitions/Error'
        500:
          description: Internal error
          schema:
            $ref: './models.json#/definitions/Error'
security:
  - cookie: []
  - bearer: []
securityDefinitions:
  cookie:
    type: apiKey
    description: use cookies for authentication, when the user already logged in
    in: header
    name: Cookie
  bearer:
    type: apiKey
    name: Authorization
    in: header
